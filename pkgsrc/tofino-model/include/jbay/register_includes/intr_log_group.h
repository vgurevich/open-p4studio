/*******************************************************************************
 *  Copyright (C) 2024 Intel Corporation
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions
 *  and limitations under the License.
 *
 *
 *  SPDX-License-Identifier: Apache-2.0
 ******************************************************************************/

// generated by split_classes.pl
#ifndef __REGISTER_INCLUDES_INTR_LOG_GROUP_H__
#define __REGISTER_INCLUDES_INTR_LOG_GROUP_H__


#include <cstdint>
#include <cassert>
#include <array>
#include <vector>
#include <string>
#include <boost/lexical_cast.hpp>
#include <boost/format.hpp>
#include <model_core/register_block.h>
#include <shared/bitvector.h>









#include "intr_log_group_bcc_ecc_dual_err_addr.h"
#include "intr_log_group_bcc_ecc_sngl_err_addr.h"
#include "intr_log_group_dppc_ecc_dual_err_addr.h"
#include "intr_log_group_dppc_ecc_sngl_err_addr.h"
#include "intr_log_group_dprsr_pkt_ctl_fatal0_err.h"
#include "intr_log_group_dprsr_pkt_ctl_fatal1_err.h"
#include "intr_log_group_dprsr_pkt_ctl_fatal2_err.h"
#include "intr_log_group_dprsr_pkt_ctl_fatal3_err.h"
#include "intr_log_group_drop_mem0_ecc_dual_err_addr.h"
#include "intr_log_group_drop_mem0_ecc_sngl_err_addr.h"
#include "intr_log_group_drop_mem1_ecc_dual_err_addr.h"
#include "intr_log_group_drop_mem1_ecc_sngl_err_addr.h"
#include "intr_log_group_gacc_mem0_ecc_dual_err_addr.h"
#include "intr_log_group_gacc_mem0_ecc_sngl_err_addr.h"
#include "intr_log_group_gacc_mem1_ecc_dual_err_addr.h"
#include "intr_log_group_gacc_mem1_ecc_sngl_err_addr.h"
#include "intr_log_group_gacc_mem2_ecc_dual_err_addr.h"
#include "intr_log_group_gacc_mem2_ecc_sngl_err_addr.h"
#include "intr_log_group_gacc_mem3_ecc_dual_err_addr.h"
#include "intr_log_group_gacc_mem3_ecc_sngl_err_addr.h"
#include "intr_log_group_llc_mem0_ecc_dual_err_addr.h"
#include "intr_log_group_llc_mem0_ecc_sngl_err_addr.h"
#include "intr_log_group_llc_mem1_ecc_dual_err_addr.h"
#include "intr_log_group_llc_mem1_ecc_sngl_err_addr.h"
#include "intr_log_group_llc_mem2_ecc_dual_err_addr.h"
#include "intr_log_group_llc_mem2_ecc_sngl_err_addr.h"
#include "intr_log_group_mac_oversz_pkt_err.h"
#include "intr_log_group_mac_protocol_err.h"
#include "intr_log_group_mac_runt_pkt_err.h"
#include "intr_log_group_mbc_ecc_dual_err_addr.h"
#include "intr_log_group_mbc_ecc_sngl_err_addr.h"
#include "intr_log_group_mbc_meta_fifo_ecc_dual_err_addr.h"
#include "intr_log_group_mbc_meta_fifo_ecc_sngl_err_addr.h"
#include "intr_log_group_meta_fifo_fatal0_err.h"
#include "intr_log_group_meta_fifo_fatal1_err.h"
#include "intr_log_group_meta_fifo_fatal2_err.h"
#include "intr_log_group_meta_fifo_fatal3_err.h"
#include "intr_log_group_papc_ecc_dual_err_addr.h"
#include "intr_log_group_papc_ecc_sngl_err_addr.h"
#include "intr_log_group_papc_merge_mem0_ecc_dual_err_addr.h"
#include "intr_log_group_papc_merge_mem0_ecc_sngl_err_addr.h"
#include "intr_log_group_papc_merge_mem1_ecc_dual_err_addr.h"
#include "intr_log_group_papc_merge_mem1_ecc_sngl_err_addr.h"
#include "intr_log_group_pbc_mem0_ecc_dual_err_addr.h"
#include "intr_log_group_pbc_mem0_ecc_sngl_err_addr.h"
#include "intr_log_group_pbc_mem1_ecc_dual_err_addr.h"
#include "intr_log_group_pbc_mem1_ecc_sngl_err_addr.h"
#include "intr_log_group_pc_fatal_err.h"
#include "intr_log_group_prsr_pkt_ctl_fatal0_err.h"
#include "intr_log_group_prsr_pkt_ctl_fatal1_err.h"
#include "intr_log_group_prsr_pkt_ctl_fatal2_err.h"
#include "intr_log_group_prsr_pkt_ctl_fatal3_err.h"

namespace jbay {
  namespace register_classes {

class IntrLogGroup : public model_core::RegisterBlock<RegisterCallback> {
public:
  IntrLogGroup(
      int chipNumber, int index_pipe_addrmap, int index_ipb_prsr4_reg, RegisterCallback& write_callback = 0, RegisterCallback& read_callback = 0
  )
    : RegisterBlock(chipNumber, StartOffset(index_pipe_addrmap, index_ipb_prsr4_reg), 208, false, write_callback, read_callback, std::string("IntrLogGroup")+":"+boost::lexical_cast<std::string>(index_pipe_addrmap) + "," + boost::lexical_cast<std::string>(index_ipb_prsr4_reg))
    {
    }
  IntrLogGroup(
      
  )
    : RegisterBlock(0, 0, 0, false, 0, 0, "IntrLogGroup")
    {
    }
public:





  IntrLogGroupPcFatalErr &glb_group_intr_log_group_pc_fatal_err() { return glb_group_intr_log_group_pc_fatal_err_; }





  IntrLogGroupMacProtocolErr &glb_group_intr_log_group_mac_protocol_err() { return glb_group_intr_log_group_mac_protocol_err_; }





  IntrLogGroupMacRuntPktErr &glb_group_intr_log_group_mac_runt_pkt_err() { return glb_group_intr_log_group_mac_runt_pkt_err_; }





  IntrLogGroupMacOverszPktErr &glb_group_intr_log_group_mac_oversz_pkt_err() { return glb_group_intr_log_group_mac_oversz_pkt_err_; }





  IntrLogGroupPrsrPktCtlFatal0Err &glb_group_intr_log_group_prsr_pkt_ctl_fatal0_err() { return glb_group_intr_log_group_prsr_pkt_ctl_fatal0_err_; }





  IntrLogGroupPrsrPktCtlFatal1Err &glb_group_intr_log_group_prsr_pkt_ctl_fatal1_err() { return glb_group_intr_log_group_prsr_pkt_ctl_fatal1_err_; }





  IntrLogGroupPrsrPktCtlFatal2Err &glb_group_intr_log_group_prsr_pkt_ctl_fatal2_err() { return glb_group_intr_log_group_prsr_pkt_ctl_fatal2_err_; }





  IntrLogGroupPrsrPktCtlFatal3Err &glb_group_intr_log_group_prsr_pkt_ctl_fatal3_err() { return glb_group_intr_log_group_prsr_pkt_ctl_fatal3_err_; }





  IntrLogGroupDprsrPktCtlFatal0Err &glb_group_intr_log_group_dprsr_pkt_ctl_fatal0_err() { return glb_group_intr_log_group_dprsr_pkt_ctl_fatal0_err_; }





  IntrLogGroupDprsrPktCtlFatal1Err &glb_group_intr_log_group_dprsr_pkt_ctl_fatal1_err() { return glb_group_intr_log_group_dprsr_pkt_ctl_fatal1_err_; }





  IntrLogGroupDprsrPktCtlFatal2Err &glb_group_intr_log_group_dprsr_pkt_ctl_fatal2_err() { return glb_group_intr_log_group_dprsr_pkt_ctl_fatal2_err_; }





  IntrLogGroupDprsrPktCtlFatal3Err &glb_group_intr_log_group_dprsr_pkt_ctl_fatal3_err() { return glb_group_intr_log_group_dprsr_pkt_ctl_fatal3_err_; }





  IntrLogGroupMetaFifoFatal0Err &glb_group_intr_log_group_meta_fifo_fatal0_err() { return glb_group_intr_log_group_meta_fifo_fatal0_err_; }





  IntrLogGroupMetaFifoFatal1Err &glb_group_intr_log_group_meta_fifo_fatal1_err() { return glb_group_intr_log_group_meta_fifo_fatal1_err_; }





  IntrLogGroupMetaFifoFatal2Err &glb_group_intr_log_group_meta_fifo_fatal2_err() { return glb_group_intr_log_group_meta_fifo_fatal2_err_; }





  IntrLogGroupMetaFifoFatal3Err &glb_group_intr_log_group_meta_fifo_fatal3_err() { return glb_group_intr_log_group_meta_fifo_fatal3_err_; }





  IntrLogGroupPbcMem0EccDualErrAddr &glb_group_intr_log_group_pbc_mem0_ecc_dual_err_addr() { return glb_group_intr_log_group_pbc_mem0_ecc_dual_err_addr_; }





  IntrLogGroupPbcMem0EccSnglErrAddr &glb_group_intr_log_group_pbc_mem0_ecc_sngl_err_addr() { return glb_group_intr_log_group_pbc_mem0_ecc_sngl_err_addr_; }





  IntrLogGroupPbcMem1EccDualErrAddr &glb_group_intr_log_group_pbc_mem1_ecc_dual_err_addr() { return glb_group_intr_log_group_pbc_mem1_ecc_dual_err_addr_; }





  IntrLogGroupPbcMem1EccSnglErrAddr &glb_group_intr_log_group_pbc_mem1_ecc_sngl_err_addr() { return glb_group_intr_log_group_pbc_mem1_ecc_sngl_err_addr_; }





  IntrLogGroupMbcEccDualErrAddr &glb_group_intr_log_group_mbc_ecc_dual_err_addr() { return glb_group_intr_log_group_mbc_ecc_dual_err_addr_; }





  IntrLogGroupMbcEccSnglErrAddr &glb_group_intr_log_group_mbc_ecc_sngl_err_addr() { return glb_group_intr_log_group_mbc_ecc_sngl_err_addr_; }





  IntrLogGroupMbcMetaFifoEccDualErrAddr &glb_group_intr_log_group_mbc_meta_fifo_ecc_dual_err_addr() { return glb_group_intr_log_group_mbc_meta_fifo_ecc_dual_err_addr_; }





  IntrLogGroupMbcMetaFifoEccSnglErrAddr &glb_group_intr_log_group_mbc_meta_fifo_ecc_sngl_err_addr() { return glb_group_intr_log_group_mbc_meta_fifo_ecc_sngl_err_addr_; }





  IntrLogGroupLlcMem0EccDualErrAddr &glb_group_intr_log_group_llc_mem0_ecc_dual_err_addr() { return glb_group_intr_log_group_llc_mem0_ecc_dual_err_addr_; }





  IntrLogGroupLlcMem0EccSnglErrAddr &glb_group_intr_log_group_llc_mem0_ecc_sngl_err_addr() { return glb_group_intr_log_group_llc_mem0_ecc_sngl_err_addr_; }





  IntrLogGroupLlcMem1EccDualErrAddr &glb_group_intr_log_group_llc_mem1_ecc_dual_err_addr() { return glb_group_intr_log_group_llc_mem1_ecc_dual_err_addr_; }





  IntrLogGroupLlcMem1EccSnglErrAddr &glb_group_intr_log_group_llc_mem1_ecc_sngl_err_addr() { return glb_group_intr_log_group_llc_mem1_ecc_sngl_err_addr_; }





  IntrLogGroupLlcMem2EccDualErrAddr &glb_group_intr_log_group_llc_mem2_ecc_dual_err_addr() { return glb_group_intr_log_group_llc_mem2_ecc_dual_err_addr_; }





  IntrLogGroupLlcMem2EccSnglErrAddr &glb_group_intr_log_group_llc_mem2_ecc_sngl_err_addr() { return glb_group_intr_log_group_llc_mem2_ecc_sngl_err_addr_; }





  IntrLogGroupDropMem0EccDualErrAddr &glb_group_intr_log_group_drop_mem0_ecc_dual_err_addr() { return glb_group_intr_log_group_drop_mem0_ecc_dual_err_addr_; }





  IntrLogGroupDropMem0EccSnglErrAddr &glb_group_intr_log_group_drop_mem0_ecc_sngl_err_addr() { return glb_group_intr_log_group_drop_mem0_ecc_sngl_err_addr_; }





  IntrLogGroupDropMem1EccDualErrAddr &glb_group_intr_log_group_drop_mem1_ecc_dual_err_addr() { return glb_group_intr_log_group_drop_mem1_ecc_dual_err_addr_; }





  IntrLogGroupDropMem1EccSnglErrAddr &glb_group_intr_log_group_drop_mem1_ecc_sngl_err_addr() { return glb_group_intr_log_group_drop_mem1_ecc_sngl_err_addr_; }





  IntrLogGroupPapcMergeMem0EccDualErrAddr &glb_group_intr_log_group_papc_merge_mem0_ecc_dual_err_addr() { return glb_group_intr_log_group_papc_merge_mem0_ecc_dual_err_addr_; }





  IntrLogGroupPapcMergeMem0EccSnglErrAddr &glb_group_intr_log_group_papc_merge_mem0_ecc_sngl_err_addr() { return glb_group_intr_log_group_papc_merge_mem0_ecc_sngl_err_addr_; }





  IntrLogGroupPapcMergeMem1EccDualErrAddr &glb_group_intr_log_group_papc_merge_mem1_ecc_dual_err_addr() { return glb_group_intr_log_group_papc_merge_mem1_ecc_dual_err_addr_; }





  IntrLogGroupPapcMergeMem1EccSnglErrAddr &glb_group_intr_log_group_papc_merge_mem1_ecc_sngl_err_addr() { return glb_group_intr_log_group_papc_merge_mem1_ecc_sngl_err_addr_; }





  IntrLogGroupPapcEccDualErrAddr &glb_group_intr_log_group_papc_ecc_dual_err_addr() { return glb_group_intr_log_group_papc_ecc_dual_err_addr_; }





  IntrLogGroupPapcEccSnglErrAddr &glb_group_intr_log_group_papc_ecc_sngl_err_addr() { return glb_group_intr_log_group_papc_ecc_sngl_err_addr_; }





  IntrLogGroupDppcEccDualErrAddr &glb_group_intr_log_group_dppc_ecc_dual_err_addr() { return glb_group_intr_log_group_dppc_ecc_dual_err_addr_; }





  IntrLogGroupDppcEccSnglErrAddr &glb_group_intr_log_group_dppc_ecc_sngl_err_addr() { return glb_group_intr_log_group_dppc_ecc_sngl_err_addr_; }





  IntrLogGroupGaccMem0EccDualErrAddr &glb_group_intr_log_group_gacc_mem0_ecc_dual_err_addr() { return glb_group_intr_log_group_gacc_mem0_ecc_dual_err_addr_; }





  IntrLogGroupGaccMem0EccSnglErrAddr &glb_group_intr_log_group_gacc_mem0_ecc_sngl_err_addr() { return glb_group_intr_log_group_gacc_mem0_ecc_sngl_err_addr_; }





  IntrLogGroupGaccMem1EccDualErrAddr &glb_group_intr_log_group_gacc_mem1_ecc_dual_err_addr() { return glb_group_intr_log_group_gacc_mem1_ecc_dual_err_addr_; }





  IntrLogGroupGaccMem1EccSnglErrAddr &glb_group_intr_log_group_gacc_mem1_ecc_sngl_err_addr() { return glb_group_intr_log_group_gacc_mem1_ecc_sngl_err_addr_; }





  IntrLogGroupGaccMem2EccDualErrAddr &glb_group_intr_log_group_gacc_mem2_ecc_dual_err_addr() { return glb_group_intr_log_group_gacc_mem2_ecc_dual_err_addr_; }





  IntrLogGroupGaccMem2EccSnglErrAddr &glb_group_intr_log_group_gacc_mem2_ecc_sngl_err_addr() { return glb_group_intr_log_group_gacc_mem2_ecc_sngl_err_addr_; }





  IntrLogGroupGaccMem3EccDualErrAddr &glb_group_intr_log_group_gacc_mem3_ecc_dual_err_addr() { return glb_group_intr_log_group_gacc_mem3_ecc_dual_err_addr_; }





  IntrLogGroupGaccMem3EccSnglErrAddr &glb_group_intr_log_group_gacc_mem3_ecc_sngl_err_addr() { return glb_group_intr_log_group_gacc_mem3_ecc_sngl_err_addr_; }





  IntrLogGroupBccEccDualErrAddr &glb_group_intr_log_group_bcc_ecc_dual_err_addr() { return glb_group_intr_log_group_bcc_ecc_dual_err_addr_; }





  IntrLogGroupBccEccSnglErrAddr &glb_group_intr_log_group_bcc_ecc_sngl_err_addr() { return glb_group_intr_log_group_bcc_ecc_sngl_err_addr_; }

  bool read(
      uint32_t offset, uint32_t* data
      ) const {
    if (offset < 0x4) {
      offset -= 0x0;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_pc_fatal_err_.read( offset, data );
    }
    else if (offset >= 0x4 && offset < 0x8) {
      offset -= 0x4;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_mac_protocol_err_.read( offset, data );
    }
    else if (offset >= 0x8 && offset < 0xc) {
      offset -= 0x8;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_mac_runt_pkt_err_.read( offset, data );
    }
    else if (offset >= 0xc && offset < 0x10) {
      offset -= 0xc;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_mac_oversz_pkt_err_.read( offset, data );
    }
    else if (offset >= 0x10 && offset < 0x14) {
      offset -= 0x10;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_prsr_pkt_ctl_fatal0_err_.read( offset, data );
    }
    else if (offset >= 0x14 && offset < 0x18) {
      offset -= 0x14;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_prsr_pkt_ctl_fatal1_err_.read( offset, data );
    }
    else if (offset >= 0x18 && offset < 0x1c) {
      offset -= 0x18;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_prsr_pkt_ctl_fatal2_err_.read( offset, data );
    }
    else if (offset >= 0x1c && offset < 0x20) {
      offset -= 0x1c;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_prsr_pkt_ctl_fatal3_err_.read( offset, data );
    }
    else if (offset >= 0x20 && offset < 0x24) {
      offset -= 0x20;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_dprsr_pkt_ctl_fatal0_err_.read( offset, data );
    }
    else if (offset >= 0x24 && offset < 0x28) {
      offset -= 0x24;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_dprsr_pkt_ctl_fatal1_err_.read( offset, data );
    }
    else if (offset >= 0x28 && offset < 0x2c) {
      offset -= 0x28;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_dprsr_pkt_ctl_fatal2_err_.read( offset, data );
    }
    else if (offset >= 0x2c && offset < 0x30) {
      offset -= 0x2c;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_dprsr_pkt_ctl_fatal3_err_.read( offset, data );
    }
    else if (offset >= 0x30 && offset < 0x34) {
      offset -= 0x30;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_meta_fifo_fatal0_err_.read( offset, data );
    }
    else if (offset >= 0x34 && offset < 0x38) {
      offset -= 0x34;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_meta_fifo_fatal1_err_.read( offset, data );
    }
    else if (offset >= 0x38 && offset < 0x3c) {
      offset -= 0x38;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_meta_fifo_fatal2_err_.read( offset, data );
    }
    else if (offset >= 0x3c && offset < 0x40) {
      offset -= 0x3c;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_meta_fifo_fatal3_err_.read( offset, data );
    }
    else if (offset >= 0x40 && offset < 0x44) {
      offset -= 0x40;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_pbc_mem0_ecc_dual_err_addr_.read( offset, data );
    }
    else if (offset >= 0x44 && offset < 0x48) {
      offset -= 0x44;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_pbc_mem0_ecc_sngl_err_addr_.read( offset, data );
    }
    else if (offset >= 0x48 && offset < 0x4c) {
      offset -= 0x48;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_pbc_mem1_ecc_dual_err_addr_.read( offset, data );
    }
    else if (offset >= 0x4c && offset < 0x50) {
      offset -= 0x4c;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_pbc_mem1_ecc_sngl_err_addr_.read( offset, data );
    }
    else if (offset >= 0x50 && offset < 0x54) {
      offset -= 0x50;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_mbc_ecc_dual_err_addr_.read( offset, data );
    }
    else if (offset >= 0x54 && offset < 0x58) {
      offset -= 0x54;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_mbc_ecc_sngl_err_addr_.read( offset, data );
    }
    else if (offset >= 0x58 && offset < 0x5c) {
      offset -= 0x58;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_mbc_meta_fifo_ecc_dual_err_addr_.read( offset, data );
    }
    else if (offset >= 0x5c && offset < 0x60) {
      offset -= 0x5c;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_mbc_meta_fifo_ecc_sngl_err_addr_.read( offset, data );
    }
    else if (offset >= 0x60 && offset < 0x64) {
      offset -= 0x60;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_llc_mem0_ecc_dual_err_addr_.read( offset, data );
    }
    else if (offset >= 0x64 && offset < 0x68) {
      offset -= 0x64;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_llc_mem0_ecc_sngl_err_addr_.read( offset, data );
    }
    else if (offset >= 0x68 && offset < 0x6c) {
      offset -= 0x68;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_llc_mem1_ecc_dual_err_addr_.read( offset, data );
    }
    else if (offset >= 0x6c && offset < 0x70) {
      offset -= 0x6c;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_llc_mem1_ecc_sngl_err_addr_.read( offset, data );
    }
    else if (offset >= 0x70 && offset < 0x74) {
      offset -= 0x70;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_llc_mem2_ecc_dual_err_addr_.read( offset, data );
    }
    else if (offset >= 0x74 && offset < 0x78) {
      offset -= 0x74;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_llc_mem2_ecc_sngl_err_addr_.read( offset, data );
    }
    else if (offset >= 0x78 && offset < 0x7c) {
      offset -= 0x78;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_drop_mem0_ecc_dual_err_addr_.read( offset, data );
    }
    else if (offset >= 0x7c && offset < 0x80) {
      offset -= 0x7c;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_drop_mem0_ecc_sngl_err_addr_.read( offset, data );
    }
    else if (offset >= 0x80 && offset < 0x84) {
      offset -= 0x80;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_drop_mem1_ecc_dual_err_addr_.read( offset, data );
    }
    else if (offset >= 0x84 && offset < 0x88) {
      offset -= 0x84;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_drop_mem1_ecc_sngl_err_addr_.read( offset, data );
    }
    else if (offset >= 0x88 && offset < 0x8c) {
      offset -= 0x88;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_papc_merge_mem0_ecc_dual_err_addr_.read( offset, data );
    }
    else if (offset >= 0x8c && offset < 0x90) {
      offset -= 0x8c;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_papc_merge_mem0_ecc_sngl_err_addr_.read( offset, data );
    }
    else if (offset >= 0x90 && offset < 0x94) {
      offset -= 0x90;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_papc_merge_mem1_ecc_dual_err_addr_.read( offset, data );
    }
    else if (offset >= 0x94 && offset < 0x98) {
      offset -= 0x94;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_papc_merge_mem1_ecc_sngl_err_addr_.read( offset, data );
    }
    else if (offset >= 0x98 && offset < 0x9c) {
      offset -= 0x98;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_papc_ecc_dual_err_addr_.read( offset, data );
    }
    else if (offset >= 0x9c && offset < 0xa0) {
      offset -= 0x9c;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_papc_ecc_sngl_err_addr_.read( offset, data );
    }
    else if (offset >= 0xa0 && offset < 0xa4) {
      offset -= 0xa0;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_dppc_ecc_dual_err_addr_.read( offset, data );
    }
    else if (offset >= 0xa4 && offset < 0xa8) {
      offset -= 0xa4;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_dppc_ecc_sngl_err_addr_.read( offset, data );
    }
    else if (offset >= 0xa8 && offset < 0xac) {
      offset -= 0xa8;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_gacc_mem0_ecc_dual_err_addr_.read( offset, data );
    }
    else if (offset >= 0xac && offset < 0xb0) {
      offset -= 0xac;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_gacc_mem0_ecc_sngl_err_addr_.read( offset, data );
    }
    else if (offset >= 0xb0 && offset < 0xb4) {
      offset -= 0xb0;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_gacc_mem1_ecc_dual_err_addr_.read( offset, data );
    }
    else if (offset >= 0xb4 && offset < 0xb8) {
      offset -= 0xb4;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_gacc_mem1_ecc_sngl_err_addr_.read( offset, data );
    }
    else if (offset >= 0xb8 && offset < 0xbc) {
      offset -= 0xb8;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_gacc_mem2_ecc_dual_err_addr_.read( offset, data );
    }
    else if (offset >= 0xbc && offset < 0xc0) {
      offset -= 0xbc;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_gacc_mem2_ecc_sngl_err_addr_.read( offset, data );
    }
    else if (offset >= 0xc0 && offset < 0xc4) {
      offset -= 0xc0;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_gacc_mem3_ecc_dual_err_addr_.read( offset, data );
    }
    else if (offset >= 0xc4 && offset < 0xc8) {
      offset -= 0xc4;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_gacc_mem3_ecc_sngl_err_addr_.read( offset, data );
    }
    else if (offset >= 0xc8 && offset < 0xcc) {
      offset -= 0xc8;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_bcc_ecc_dual_err_addr_.read( offset, data );
    }
    else if (offset >= 0xcc && offset < 0xd0) {
      offset -= 0xcc;
      if (read_callback_) read_callback_();
      glb_group_intr_log_group_bcc_ecc_sngl_err_addr_.read( offset, data );
    }
    return true;
  }


  bool write(
      uint32_t offset, uint32_t data
      ) {
    if (offset < 0x4) {
      offset -= 0x0;
      glb_group_intr_log_group_pc_fatal_err_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x4 && offset < 0x8) {
      offset -= 0x4;
      glb_group_intr_log_group_mac_protocol_err_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x8 && offset < 0xc) {
      offset -= 0x8;
      glb_group_intr_log_group_mac_runt_pkt_err_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0xc && offset < 0x10) {
      offset -= 0xc;
      glb_group_intr_log_group_mac_oversz_pkt_err_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x10 && offset < 0x14) {
      offset -= 0x10;
      glb_group_intr_log_group_prsr_pkt_ctl_fatal0_err_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x14 && offset < 0x18) {
      offset -= 0x14;
      glb_group_intr_log_group_prsr_pkt_ctl_fatal1_err_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x18 && offset < 0x1c) {
      offset -= 0x18;
      glb_group_intr_log_group_prsr_pkt_ctl_fatal2_err_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x1c && offset < 0x20) {
      offset -= 0x1c;
      glb_group_intr_log_group_prsr_pkt_ctl_fatal3_err_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x20 && offset < 0x24) {
      offset -= 0x20;
      glb_group_intr_log_group_dprsr_pkt_ctl_fatal0_err_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x24 && offset < 0x28) {
      offset -= 0x24;
      glb_group_intr_log_group_dprsr_pkt_ctl_fatal1_err_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x28 && offset < 0x2c) {
      offset -= 0x28;
      glb_group_intr_log_group_dprsr_pkt_ctl_fatal2_err_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x2c && offset < 0x30) {
      offset -= 0x2c;
      glb_group_intr_log_group_dprsr_pkt_ctl_fatal3_err_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x30 && offset < 0x34) {
      offset -= 0x30;
      glb_group_intr_log_group_meta_fifo_fatal0_err_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x34 && offset < 0x38) {
      offset -= 0x34;
      glb_group_intr_log_group_meta_fifo_fatal1_err_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x38 && offset < 0x3c) {
      offset -= 0x38;
      glb_group_intr_log_group_meta_fifo_fatal2_err_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x3c && offset < 0x40) {
      offset -= 0x3c;
      glb_group_intr_log_group_meta_fifo_fatal3_err_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x40 && offset < 0x44) {
      offset -= 0x40;
      glb_group_intr_log_group_pbc_mem0_ecc_dual_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x44 && offset < 0x48) {
      offset -= 0x44;
      glb_group_intr_log_group_pbc_mem0_ecc_sngl_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x48 && offset < 0x4c) {
      offset -= 0x48;
      glb_group_intr_log_group_pbc_mem1_ecc_dual_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x4c && offset < 0x50) {
      offset -= 0x4c;
      glb_group_intr_log_group_pbc_mem1_ecc_sngl_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x50 && offset < 0x54) {
      offset -= 0x50;
      glb_group_intr_log_group_mbc_ecc_dual_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x54 && offset < 0x58) {
      offset -= 0x54;
      glb_group_intr_log_group_mbc_ecc_sngl_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x58 && offset < 0x5c) {
      offset -= 0x58;
      glb_group_intr_log_group_mbc_meta_fifo_ecc_dual_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x5c && offset < 0x60) {
      offset -= 0x5c;
      glb_group_intr_log_group_mbc_meta_fifo_ecc_sngl_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x60 && offset < 0x64) {
      offset -= 0x60;
      glb_group_intr_log_group_llc_mem0_ecc_dual_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x64 && offset < 0x68) {
      offset -= 0x64;
      glb_group_intr_log_group_llc_mem0_ecc_sngl_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x68 && offset < 0x6c) {
      offset -= 0x68;
      glb_group_intr_log_group_llc_mem1_ecc_dual_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x6c && offset < 0x70) {
      offset -= 0x6c;
      glb_group_intr_log_group_llc_mem1_ecc_sngl_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x70 && offset < 0x74) {
      offset -= 0x70;
      glb_group_intr_log_group_llc_mem2_ecc_dual_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x74 && offset < 0x78) {
      offset -= 0x74;
      glb_group_intr_log_group_llc_mem2_ecc_sngl_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x78 && offset < 0x7c) {
      offset -= 0x78;
      glb_group_intr_log_group_drop_mem0_ecc_dual_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x7c && offset < 0x80) {
      offset -= 0x7c;
      glb_group_intr_log_group_drop_mem0_ecc_sngl_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x80 && offset < 0x84) {
      offset -= 0x80;
      glb_group_intr_log_group_drop_mem1_ecc_dual_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x84 && offset < 0x88) {
      offset -= 0x84;
      glb_group_intr_log_group_drop_mem1_ecc_sngl_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x88 && offset < 0x8c) {
      offset -= 0x88;
      glb_group_intr_log_group_papc_merge_mem0_ecc_dual_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x8c && offset < 0x90) {
      offset -= 0x8c;
      glb_group_intr_log_group_papc_merge_mem0_ecc_sngl_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x90 && offset < 0x94) {
      offset -= 0x90;
      glb_group_intr_log_group_papc_merge_mem1_ecc_dual_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x94 && offset < 0x98) {
      offset -= 0x94;
      glb_group_intr_log_group_papc_merge_mem1_ecc_sngl_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x98 && offset < 0x9c) {
      offset -= 0x98;
      glb_group_intr_log_group_papc_ecc_dual_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x9c && offset < 0xa0) {
      offset -= 0x9c;
      glb_group_intr_log_group_papc_ecc_sngl_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0xa0 && offset < 0xa4) {
      offset -= 0xa0;
      glb_group_intr_log_group_dppc_ecc_dual_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0xa4 && offset < 0xa8) {
      offset -= 0xa4;
      glb_group_intr_log_group_dppc_ecc_sngl_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0xa8 && offset < 0xac) {
      offset -= 0xa8;
      glb_group_intr_log_group_gacc_mem0_ecc_dual_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0xac && offset < 0xb0) {
      offset -= 0xac;
      glb_group_intr_log_group_gacc_mem0_ecc_sngl_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0xb0 && offset < 0xb4) {
      offset -= 0xb0;
      glb_group_intr_log_group_gacc_mem1_ecc_dual_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0xb4 && offset < 0xb8) {
      offset -= 0xb4;
      glb_group_intr_log_group_gacc_mem1_ecc_sngl_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0xb8 && offset < 0xbc) {
      offset -= 0xb8;
      glb_group_intr_log_group_gacc_mem2_ecc_dual_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0xbc && offset < 0xc0) {
      offset -= 0xbc;
      glb_group_intr_log_group_gacc_mem2_ecc_sngl_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0xc0 && offset < 0xc4) {
      offset -= 0xc0;
      glb_group_intr_log_group_gacc_mem3_ecc_dual_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0xc4 && offset < 0xc8) {
      offset -= 0xc4;
      glb_group_intr_log_group_gacc_mem3_ecc_sngl_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0xc8 && offset < 0xcc) {
      offset -= 0xc8;
      glb_group_intr_log_group_bcc_ecc_dual_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0xcc && offset < 0xd0) {
      offset -= 0xcc;
      glb_group_intr_log_group_bcc_ecc_sngl_err_addr_.write( offset, data );
      if (write_callback_) write_callback_();
    }
    return true;
  }

  void reset(
      
      ) {
    glb_group_intr_log_group_pc_fatal_err_.reset();
    glb_group_intr_log_group_mac_protocol_err_.reset();
    glb_group_intr_log_group_mac_runt_pkt_err_.reset();
    glb_group_intr_log_group_mac_oversz_pkt_err_.reset();
    glb_group_intr_log_group_prsr_pkt_ctl_fatal0_err_.reset();
    glb_group_intr_log_group_prsr_pkt_ctl_fatal1_err_.reset();
    glb_group_intr_log_group_prsr_pkt_ctl_fatal2_err_.reset();
    glb_group_intr_log_group_prsr_pkt_ctl_fatal3_err_.reset();
    glb_group_intr_log_group_dprsr_pkt_ctl_fatal0_err_.reset();
    glb_group_intr_log_group_dprsr_pkt_ctl_fatal1_err_.reset();
    glb_group_intr_log_group_dprsr_pkt_ctl_fatal2_err_.reset();
    glb_group_intr_log_group_dprsr_pkt_ctl_fatal3_err_.reset();
    glb_group_intr_log_group_meta_fifo_fatal0_err_.reset();
    glb_group_intr_log_group_meta_fifo_fatal1_err_.reset();
    glb_group_intr_log_group_meta_fifo_fatal2_err_.reset();
    glb_group_intr_log_group_meta_fifo_fatal3_err_.reset();
    glb_group_intr_log_group_pbc_mem0_ecc_dual_err_addr_.reset();
    glb_group_intr_log_group_pbc_mem0_ecc_sngl_err_addr_.reset();
    glb_group_intr_log_group_pbc_mem1_ecc_dual_err_addr_.reset();
    glb_group_intr_log_group_pbc_mem1_ecc_sngl_err_addr_.reset();
    glb_group_intr_log_group_mbc_ecc_dual_err_addr_.reset();
    glb_group_intr_log_group_mbc_ecc_sngl_err_addr_.reset();
    glb_group_intr_log_group_mbc_meta_fifo_ecc_dual_err_addr_.reset();
    glb_group_intr_log_group_mbc_meta_fifo_ecc_sngl_err_addr_.reset();
    glb_group_intr_log_group_llc_mem0_ecc_dual_err_addr_.reset();
    glb_group_intr_log_group_llc_mem0_ecc_sngl_err_addr_.reset();
    glb_group_intr_log_group_llc_mem1_ecc_dual_err_addr_.reset();
    glb_group_intr_log_group_llc_mem1_ecc_sngl_err_addr_.reset();
    glb_group_intr_log_group_llc_mem2_ecc_dual_err_addr_.reset();
    glb_group_intr_log_group_llc_mem2_ecc_sngl_err_addr_.reset();
    glb_group_intr_log_group_drop_mem0_ecc_dual_err_addr_.reset();
    glb_group_intr_log_group_drop_mem0_ecc_sngl_err_addr_.reset();
    glb_group_intr_log_group_drop_mem1_ecc_dual_err_addr_.reset();
    glb_group_intr_log_group_drop_mem1_ecc_sngl_err_addr_.reset();
    glb_group_intr_log_group_papc_merge_mem0_ecc_dual_err_addr_.reset();
    glb_group_intr_log_group_papc_merge_mem0_ecc_sngl_err_addr_.reset();
    glb_group_intr_log_group_papc_merge_mem1_ecc_dual_err_addr_.reset();
    glb_group_intr_log_group_papc_merge_mem1_ecc_sngl_err_addr_.reset();
    glb_group_intr_log_group_papc_ecc_dual_err_addr_.reset();
    glb_group_intr_log_group_papc_ecc_sngl_err_addr_.reset();
    glb_group_intr_log_group_dppc_ecc_dual_err_addr_.reset();
    glb_group_intr_log_group_dppc_ecc_sngl_err_addr_.reset();
    glb_group_intr_log_group_gacc_mem0_ecc_dual_err_addr_.reset();
    glb_group_intr_log_group_gacc_mem0_ecc_sngl_err_addr_.reset();
    glb_group_intr_log_group_gacc_mem1_ecc_dual_err_addr_.reset();
    glb_group_intr_log_group_gacc_mem1_ecc_sngl_err_addr_.reset();
    glb_group_intr_log_group_gacc_mem2_ecc_dual_err_addr_.reset();
    glb_group_intr_log_group_gacc_mem2_ecc_sngl_err_addr_.reset();
    glb_group_intr_log_group_gacc_mem3_ecc_dual_err_addr_.reset();
    glb_group_intr_log_group_gacc_mem3_ecc_sngl_err_addr_.reset();
    glb_group_intr_log_group_bcc_ecc_dual_err_addr_.reset();
    glb_group_intr_log_group_bcc_ecc_sngl_err_addr_.reset();
    if (write_callback_) write_callback_();
  }

  std::string to_string(
      uint32_t offset, bool print_zeros = false, std::string indent_string = ""
      ) const {
    std::string r("");
    bool all_zeros=true;
    all_zeros=false;
    if (offset < 0x4) {
      offset -= 0x0;
      r += glb_group_intr_log_group_pc_fatal_err_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x4 && offset < 0x8) {
      offset -= 0x4;
      r += glb_group_intr_log_group_mac_protocol_err_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x8 && offset < 0xc) {
      offset -= 0x8;
      r += glb_group_intr_log_group_mac_runt_pkt_err_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0xc && offset < 0x10) {
      offset -= 0xc;
      r += glb_group_intr_log_group_mac_oversz_pkt_err_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x10 && offset < 0x14) {
      offset -= 0x10;
      r += glb_group_intr_log_group_prsr_pkt_ctl_fatal0_err_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x14 && offset < 0x18) {
      offset -= 0x14;
      r += glb_group_intr_log_group_prsr_pkt_ctl_fatal1_err_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x18 && offset < 0x1c) {
      offset -= 0x18;
      r += glb_group_intr_log_group_prsr_pkt_ctl_fatal2_err_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x1c && offset < 0x20) {
      offset -= 0x1c;
      r += glb_group_intr_log_group_prsr_pkt_ctl_fatal3_err_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x20 && offset < 0x24) {
      offset -= 0x20;
      r += glb_group_intr_log_group_dprsr_pkt_ctl_fatal0_err_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x24 && offset < 0x28) {
      offset -= 0x24;
      r += glb_group_intr_log_group_dprsr_pkt_ctl_fatal1_err_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x28 && offset < 0x2c) {
      offset -= 0x28;
      r += glb_group_intr_log_group_dprsr_pkt_ctl_fatal2_err_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x2c && offset < 0x30) {
      offset -= 0x2c;
      r += glb_group_intr_log_group_dprsr_pkt_ctl_fatal3_err_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x30 && offset < 0x34) {
      offset -= 0x30;
      r += glb_group_intr_log_group_meta_fifo_fatal0_err_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x34 && offset < 0x38) {
      offset -= 0x34;
      r += glb_group_intr_log_group_meta_fifo_fatal1_err_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x38 && offset < 0x3c) {
      offset -= 0x38;
      r += glb_group_intr_log_group_meta_fifo_fatal2_err_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x3c && offset < 0x40) {
      offset -= 0x3c;
      r += glb_group_intr_log_group_meta_fifo_fatal3_err_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x40 && offset < 0x44) {
      offset -= 0x40;
      r += glb_group_intr_log_group_pbc_mem0_ecc_dual_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x44 && offset < 0x48) {
      offset -= 0x44;
      r += glb_group_intr_log_group_pbc_mem0_ecc_sngl_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x48 && offset < 0x4c) {
      offset -= 0x48;
      r += glb_group_intr_log_group_pbc_mem1_ecc_dual_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x4c && offset < 0x50) {
      offset -= 0x4c;
      r += glb_group_intr_log_group_pbc_mem1_ecc_sngl_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x50 && offset < 0x54) {
      offset -= 0x50;
      r += glb_group_intr_log_group_mbc_ecc_dual_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x54 && offset < 0x58) {
      offset -= 0x54;
      r += glb_group_intr_log_group_mbc_ecc_sngl_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x58 && offset < 0x5c) {
      offset -= 0x58;
      r += glb_group_intr_log_group_mbc_meta_fifo_ecc_dual_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x5c && offset < 0x60) {
      offset -= 0x5c;
      r += glb_group_intr_log_group_mbc_meta_fifo_ecc_sngl_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x60 && offset < 0x64) {
      offset -= 0x60;
      r += glb_group_intr_log_group_llc_mem0_ecc_dual_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x64 && offset < 0x68) {
      offset -= 0x64;
      r += glb_group_intr_log_group_llc_mem0_ecc_sngl_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x68 && offset < 0x6c) {
      offset -= 0x68;
      r += glb_group_intr_log_group_llc_mem1_ecc_dual_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x6c && offset < 0x70) {
      offset -= 0x6c;
      r += glb_group_intr_log_group_llc_mem1_ecc_sngl_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x70 && offset < 0x74) {
      offset -= 0x70;
      r += glb_group_intr_log_group_llc_mem2_ecc_dual_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x74 && offset < 0x78) {
      offset -= 0x74;
      r += glb_group_intr_log_group_llc_mem2_ecc_sngl_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x78 && offset < 0x7c) {
      offset -= 0x78;
      r += glb_group_intr_log_group_drop_mem0_ecc_dual_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x7c && offset < 0x80) {
      offset -= 0x7c;
      r += glb_group_intr_log_group_drop_mem0_ecc_sngl_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x80 && offset < 0x84) {
      offset -= 0x80;
      r += glb_group_intr_log_group_drop_mem1_ecc_dual_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x84 && offset < 0x88) {
      offset -= 0x84;
      r += glb_group_intr_log_group_drop_mem1_ecc_sngl_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x88 && offset < 0x8c) {
      offset -= 0x88;
      r += glb_group_intr_log_group_papc_merge_mem0_ecc_dual_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x8c && offset < 0x90) {
      offset -= 0x8c;
      r += glb_group_intr_log_group_papc_merge_mem0_ecc_sngl_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x90 && offset < 0x94) {
      offset -= 0x90;
      r += glb_group_intr_log_group_papc_merge_mem1_ecc_dual_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x94 && offset < 0x98) {
      offset -= 0x94;
      r += glb_group_intr_log_group_papc_merge_mem1_ecc_sngl_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x98 && offset < 0x9c) {
      offset -= 0x98;
      r += glb_group_intr_log_group_papc_ecc_dual_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0x9c && offset < 0xa0) {
      offset -= 0x9c;
      r += glb_group_intr_log_group_papc_ecc_sngl_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0xa0 && offset < 0xa4) {
      offset -= 0xa0;
      r += glb_group_intr_log_group_dppc_ecc_dual_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0xa4 && offset < 0xa8) {
      offset -= 0xa4;
      r += glb_group_intr_log_group_dppc_ecc_sngl_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0xa8 && offset < 0xac) {
      offset -= 0xa8;
      r += glb_group_intr_log_group_gacc_mem0_ecc_dual_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0xac && offset < 0xb0) {
      offset -= 0xac;
      r += glb_group_intr_log_group_gacc_mem0_ecc_sngl_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0xb0 && offset < 0xb4) {
      offset -= 0xb0;
      r += glb_group_intr_log_group_gacc_mem1_ecc_dual_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0xb4 && offset < 0xb8) {
      offset -= 0xb4;
      r += glb_group_intr_log_group_gacc_mem1_ecc_sngl_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0xb8 && offset < 0xbc) {
      offset -= 0xb8;
      r += glb_group_intr_log_group_gacc_mem2_ecc_dual_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0xbc && offset < 0xc0) {
      offset -= 0xbc;
      r += glb_group_intr_log_group_gacc_mem2_ecc_sngl_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0xc0 && offset < 0xc4) {
      offset -= 0xc0;
      r += glb_group_intr_log_group_gacc_mem3_ecc_dual_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0xc4 && offset < 0xc8) {
      offset -= 0xc4;
      r += glb_group_intr_log_group_gacc_mem3_ecc_sngl_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0xc8 && offset < 0xcc) {
      offset -= 0xc8;
      r += glb_group_intr_log_group_bcc_ecc_dual_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    else if (offset >= 0xcc && offset < 0xd0) {
      offset -= 0xcc;
      r += glb_group_intr_log_group_bcc_ecc_sngl_err_addr_.to_string(offset,print_zeros,indent_string) ;
    }
    if (all_zeros && !print_zeros) {
      return("");
    }
    else {
      return r;
    }
  }

  std::string to_string(
      bool print_zeros = false, std::string indent_string = ""
      ) const {
    std::string r("");
    bool all_zeros=true;
    all_zeros=false;
    r += glb_group_intr_log_group_pc_fatal_err_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_mac_protocol_err_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_mac_runt_pkt_err_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_mac_oversz_pkt_err_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_prsr_pkt_ctl_fatal0_err_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_prsr_pkt_ctl_fatal1_err_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_prsr_pkt_ctl_fatal2_err_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_prsr_pkt_ctl_fatal3_err_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_dprsr_pkt_ctl_fatal0_err_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_dprsr_pkt_ctl_fatal1_err_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_dprsr_pkt_ctl_fatal2_err_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_dprsr_pkt_ctl_fatal3_err_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_meta_fifo_fatal0_err_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_meta_fifo_fatal1_err_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_meta_fifo_fatal2_err_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_meta_fifo_fatal3_err_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_pbc_mem0_ecc_dual_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_pbc_mem0_ecc_sngl_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_pbc_mem1_ecc_dual_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_pbc_mem1_ecc_sngl_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_mbc_ecc_dual_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_mbc_ecc_sngl_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_mbc_meta_fifo_ecc_dual_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_mbc_meta_fifo_ecc_sngl_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_llc_mem0_ecc_dual_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_llc_mem0_ecc_sngl_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_llc_mem1_ecc_dual_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_llc_mem1_ecc_sngl_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_llc_mem2_ecc_dual_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_llc_mem2_ecc_sngl_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_drop_mem0_ecc_dual_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_drop_mem0_ecc_sngl_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_drop_mem1_ecc_dual_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_drop_mem1_ecc_sngl_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_papc_merge_mem0_ecc_dual_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_papc_merge_mem0_ecc_sngl_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_papc_merge_mem1_ecc_dual_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_papc_merge_mem1_ecc_sngl_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_papc_ecc_dual_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_papc_ecc_sngl_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_dppc_ecc_dual_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_dppc_ecc_sngl_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_gacc_mem0_ecc_dual_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_gacc_mem0_ecc_sngl_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_gacc_mem1_ecc_dual_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_gacc_mem1_ecc_sngl_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_gacc_mem2_ecc_dual_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_gacc_mem2_ecc_sngl_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_gacc_mem3_ecc_dual_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_gacc_mem3_ecc_sngl_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_bcc_ecc_dual_err_addr_.to_string(print_zeros,indent_string) ;
    r += glb_group_intr_log_group_bcc_ecc_sngl_err_addr_.to_string(print_zeros,indent_string) ;
    if (all_zeros && !print_zeros) {
      return("");
    }
    else {
      return r;
    }
  }

private:
  IntrLogGroupPcFatalErr glb_group_intr_log_group_pc_fatal_err_;
  IntrLogGroupMacProtocolErr glb_group_intr_log_group_mac_protocol_err_;
  IntrLogGroupMacRuntPktErr glb_group_intr_log_group_mac_runt_pkt_err_;
  IntrLogGroupMacOverszPktErr glb_group_intr_log_group_mac_oversz_pkt_err_;
  IntrLogGroupPrsrPktCtlFatal0Err glb_group_intr_log_group_prsr_pkt_ctl_fatal0_err_;
  IntrLogGroupPrsrPktCtlFatal1Err glb_group_intr_log_group_prsr_pkt_ctl_fatal1_err_;
  IntrLogGroupPrsrPktCtlFatal2Err glb_group_intr_log_group_prsr_pkt_ctl_fatal2_err_;
  IntrLogGroupPrsrPktCtlFatal3Err glb_group_intr_log_group_prsr_pkt_ctl_fatal3_err_;
  IntrLogGroupDprsrPktCtlFatal0Err glb_group_intr_log_group_dprsr_pkt_ctl_fatal0_err_;
  IntrLogGroupDprsrPktCtlFatal1Err glb_group_intr_log_group_dprsr_pkt_ctl_fatal1_err_;
  IntrLogGroupDprsrPktCtlFatal2Err glb_group_intr_log_group_dprsr_pkt_ctl_fatal2_err_;
  IntrLogGroupDprsrPktCtlFatal3Err glb_group_intr_log_group_dprsr_pkt_ctl_fatal3_err_;
  IntrLogGroupMetaFifoFatal0Err glb_group_intr_log_group_meta_fifo_fatal0_err_;
  IntrLogGroupMetaFifoFatal1Err glb_group_intr_log_group_meta_fifo_fatal1_err_;
  IntrLogGroupMetaFifoFatal2Err glb_group_intr_log_group_meta_fifo_fatal2_err_;
  IntrLogGroupMetaFifoFatal3Err glb_group_intr_log_group_meta_fifo_fatal3_err_;
  IntrLogGroupPbcMem0EccDualErrAddr glb_group_intr_log_group_pbc_mem0_ecc_dual_err_addr_;
  IntrLogGroupPbcMem0EccSnglErrAddr glb_group_intr_log_group_pbc_mem0_ecc_sngl_err_addr_;
  IntrLogGroupPbcMem1EccDualErrAddr glb_group_intr_log_group_pbc_mem1_ecc_dual_err_addr_;
  IntrLogGroupPbcMem1EccSnglErrAddr glb_group_intr_log_group_pbc_mem1_ecc_sngl_err_addr_;
  IntrLogGroupMbcEccDualErrAddr glb_group_intr_log_group_mbc_ecc_dual_err_addr_;
  IntrLogGroupMbcEccSnglErrAddr glb_group_intr_log_group_mbc_ecc_sngl_err_addr_;
  IntrLogGroupMbcMetaFifoEccDualErrAddr glb_group_intr_log_group_mbc_meta_fifo_ecc_dual_err_addr_;
  IntrLogGroupMbcMetaFifoEccSnglErrAddr glb_group_intr_log_group_mbc_meta_fifo_ecc_sngl_err_addr_;
  IntrLogGroupLlcMem0EccDualErrAddr glb_group_intr_log_group_llc_mem0_ecc_dual_err_addr_;
  IntrLogGroupLlcMem0EccSnglErrAddr glb_group_intr_log_group_llc_mem0_ecc_sngl_err_addr_;
  IntrLogGroupLlcMem1EccDualErrAddr glb_group_intr_log_group_llc_mem1_ecc_dual_err_addr_;
  IntrLogGroupLlcMem1EccSnglErrAddr glb_group_intr_log_group_llc_mem1_ecc_sngl_err_addr_;
  IntrLogGroupLlcMem2EccDualErrAddr glb_group_intr_log_group_llc_mem2_ecc_dual_err_addr_;
  IntrLogGroupLlcMem2EccSnglErrAddr glb_group_intr_log_group_llc_mem2_ecc_sngl_err_addr_;
  IntrLogGroupDropMem0EccDualErrAddr glb_group_intr_log_group_drop_mem0_ecc_dual_err_addr_;
  IntrLogGroupDropMem0EccSnglErrAddr glb_group_intr_log_group_drop_mem0_ecc_sngl_err_addr_;
  IntrLogGroupDropMem1EccDualErrAddr glb_group_intr_log_group_drop_mem1_ecc_dual_err_addr_;
  IntrLogGroupDropMem1EccSnglErrAddr glb_group_intr_log_group_drop_mem1_ecc_sngl_err_addr_;
  IntrLogGroupPapcMergeMem0EccDualErrAddr glb_group_intr_log_group_papc_merge_mem0_ecc_dual_err_addr_;
  IntrLogGroupPapcMergeMem0EccSnglErrAddr glb_group_intr_log_group_papc_merge_mem0_ecc_sngl_err_addr_;
  IntrLogGroupPapcMergeMem1EccDualErrAddr glb_group_intr_log_group_papc_merge_mem1_ecc_dual_err_addr_;
  IntrLogGroupPapcMergeMem1EccSnglErrAddr glb_group_intr_log_group_papc_merge_mem1_ecc_sngl_err_addr_;
  IntrLogGroupPapcEccDualErrAddr glb_group_intr_log_group_papc_ecc_dual_err_addr_;
  IntrLogGroupPapcEccSnglErrAddr glb_group_intr_log_group_papc_ecc_sngl_err_addr_;
  IntrLogGroupDppcEccDualErrAddr glb_group_intr_log_group_dppc_ecc_dual_err_addr_;
  IntrLogGroupDppcEccSnglErrAddr glb_group_intr_log_group_dppc_ecc_sngl_err_addr_;
  IntrLogGroupGaccMem0EccDualErrAddr glb_group_intr_log_group_gacc_mem0_ecc_dual_err_addr_;
  IntrLogGroupGaccMem0EccSnglErrAddr glb_group_intr_log_group_gacc_mem0_ecc_sngl_err_addr_;
  IntrLogGroupGaccMem1EccDualErrAddr glb_group_intr_log_group_gacc_mem1_ecc_dual_err_addr_;
  IntrLogGroupGaccMem1EccSnglErrAddr glb_group_intr_log_group_gacc_mem1_ecc_sngl_err_addr_;
  IntrLogGroupGaccMem2EccDualErrAddr glb_group_intr_log_group_gacc_mem2_ecc_dual_err_addr_;
  IntrLogGroupGaccMem2EccSnglErrAddr glb_group_intr_log_group_gacc_mem2_ecc_sngl_err_addr_;
  IntrLogGroupGaccMem3EccDualErrAddr glb_group_intr_log_group_gacc_mem3_ecc_dual_err_addr_;
  IntrLogGroupGaccMem3EccSnglErrAddr glb_group_intr_log_group_gacc_mem3_ecc_sngl_err_addr_;
  IntrLogGroupBccEccDualErrAddr glb_group_intr_log_group_bcc_ecc_dual_err_addr_;
  IntrLogGroupBccEccSnglErrAddr glb_group_intr_log_group_bcc_ecc_sngl_err_addr_;
private:
  static int StartOffset(
      int index_pipe_addrmap, int index_ipb_prsr4_reg
      ) {
    int offset=0;
    offset += 0x4000000; // to get to pipes
    assert(index_pipe_addrmap < 4);
    offset += index_pipe_addrmap * 0x1000000; // pipe_addrmap[]
    offset += 0xc00000; // to get to pardereg
    assert(index_ipb_prsr4_reg < 9);
    offset += index_ipb_prsr4_reg * 0x2000; // ipb_prsr4_reg[]
    offset += 0x100; // to get to glb_group_intr_log_group
    return offset;
  }

};





  }; // namespace register_classes
}; // namespace jbay

#endif // __REGISTER_INCLUDES_INTR_LOG_GROUP_H__
