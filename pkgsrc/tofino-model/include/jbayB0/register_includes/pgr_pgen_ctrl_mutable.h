/*******************************************************************************
 *  Copyright (C) 2024 Intel Corporation
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions
 *  and limitations under the License.
 *
 *
 *  SPDX-License-Identifier: Apache-2.0
 ******************************************************************************/

// generated by split_classes.pl
#ifndef __REGISTER_INCLUDES_PGR_PGEN_CTRL_MUTABLE_H__
#define __REGISTER_INCLUDES_PGR_PGEN_CTRL_MUTABLE_H__


#include <cstdint>
#include <cassert>
#include <array>
#include <vector>
#include <string>
#include <boost/lexical_cast.hpp>
#include <boost/format.hpp>
#include <model_core/register_block.h>
#include <shared/bitvector.h>










namespace jbayB0 {
  namespace register_classes {

class PgrPgenCtrlMutable : public model_core::RegisterBlock<RegisterCallback> {
public:
  PgrPgenCtrlMutable(
      int chipNumber, int index_pipe_addrmap, RegisterCallback& write_callback = 0, RegisterCallback& read_callback = 0
  )
    : RegisterBlock(chipNumber, StartOffset(index_pipe_addrmap), 8, true, write_callback, read_callback, std::string("PgrPgenCtrlMutable")+":"+boost::lexical_cast<std::string>(index_pipe_addrmap))
    {
    }
  PgrPgenCtrlMutable(
      
  )
    : RegisterBlock(0, 0, 0, true, 0, 0, "PgrPgenCtrlMutable")
    {
    }
public:





  uint8_t pipe_id() { return pipe_id_; }
  void pipe_id(const uint8_t &v) { pipe_id_=v; }





  uint8_t swap_en() { return swap_en_; }
  void swap_en(const uint8_t &v) { swap_en_=v; }





  uint8_t buffer0_ecc_dis() { return buffer0_ecc_dis_; }
  void buffer0_ecc_dis(const uint8_t &v) { buffer0_ecc_dis_=v; }





  uint8_t buffer1_ecc_dis() { return buffer1_ecc_dis_; }
  void buffer1_ecc_dis(const uint8_t &v) { buffer1_ecc_dis_=v; }





  uint8_t buffer2_ecc_dis() { return buffer2_ecc_dis_; }
  void buffer2_ecc_dis(const uint8_t &v) { buffer2_ecc_dis_=v; }





  uint8_t buffer3_ecc_dis() { return buffer3_ecc_dis_; }
  void buffer3_ecc_dis(const uint8_t &v) { buffer3_ecc_dis_=v; }





  uint8_t phase0_ecc_dis() { return phase0_ecc_dis_; }
  void phase0_ecc_dis(const uint8_t &v) { phase0_ecc_dis_=v; }





  uint8_t pfc0_ecc_dis() { return pfc0_ecc_dis_; }
  void pfc0_ecc_dis(const uint8_t &v) { pfc0_ecc_dis_=v; }





  uint8_t pfc1_ecc_dis() { return pfc1_ecc_dis_; }
  void pfc1_ecc_dis(const uint8_t &v) { pfc1_ecc_dis_=v; }





  uint8_t crc_gen() { return crc_gen_; }
  void crc_gen(const uint8_t &v) { crc_gen_=v; }





  uint8_t eth_cpu_fifo0_mem0_ecc_dis() { return eth_cpu_fifo0_mem0_ecc_dis_; }
  void eth_cpu_fifo0_mem0_ecc_dis(const uint8_t &v) { eth_cpu_fifo0_mem0_ecc_dis_=v; }





  uint8_t eth_cpu_fifo1_mem0_ecc_dis() { return eth_cpu_fifo1_mem0_ecc_dis_; }
  void eth_cpu_fifo1_mem0_ecc_dis(const uint8_t &v) { eth_cpu_fifo1_mem0_ecc_dis_=v; }





  uint8_t eth_cpu_fifo2_mem0_ecc_dis() { return eth_cpu_fifo2_mem0_ecc_dis_; }
  void eth_cpu_fifo2_mem0_ecc_dis(const uint8_t &v) { eth_cpu_fifo2_mem0_ecc_dis_=v; }





  uint8_t tbc_fifo0_mem0_ecc_dis() { return tbc_fifo0_mem0_ecc_dis_; }
  void tbc_fifo0_mem0_ecc_dis(const uint8_t &v) { tbc_fifo0_mem0_ecc_dis_=v; }





  uint8_t tbc_fifo1_mem0_ecc_dis() { return tbc_fifo1_mem0_ecc_dis_; }
  void tbc_fifo1_mem0_ecc_dis(const uint8_t &v) { tbc_fifo1_mem0_ecc_dis_=v; }





  uint8_t tbc_fifo2_mem0_ecc_dis() { return tbc_fifo2_mem0_ecc_dis_; }
  void tbc_fifo2_mem0_ecc_dis(const uint8_t &v) { tbc_fifo2_mem0_ecc_dis_=v; }





  uint8_t ebuf_p0_fifo0_mem0_ecc_dis() { return ebuf_p0_fifo0_mem0_ecc_dis_; }
  void ebuf_p0_fifo0_mem0_ecc_dis(const uint8_t &v) { ebuf_p0_fifo0_mem0_ecc_dis_=v; }





  uint8_t ebuf_p0_fifo1_mem0_ecc_dis() { return ebuf_p0_fifo1_mem0_ecc_dis_; }
  void ebuf_p0_fifo1_mem0_ecc_dis(const uint8_t &v) { ebuf_p0_fifo1_mem0_ecc_dis_=v; }





  uint8_t ebuf_p0_fifo2_mem0_ecc_dis() { return ebuf_p0_fifo2_mem0_ecc_dis_; }
  void ebuf_p0_fifo2_mem0_ecc_dis(const uint8_t &v) { ebuf_p0_fifo2_mem0_ecc_dis_=v; }





  uint8_t ebuf_p1_fifo0_mem0_ecc_dis() { return ebuf_p1_fifo0_mem0_ecc_dis_; }
  void ebuf_p1_fifo0_mem0_ecc_dis(const uint8_t &v) { ebuf_p1_fifo0_mem0_ecc_dis_=v; }





  uint8_t ebuf_p1_fifo1_mem0_ecc_dis() { return ebuf_p1_fifo1_mem0_ecc_dis_; }
  void ebuf_p1_fifo1_mem0_ecc_dis(const uint8_t &v) { ebuf_p1_fifo1_mem0_ecc_dis_=v; }





  uint8_t ebuf_p1_fifo2_mem0_ecc_dis() { return ebuf_p1_fifo2_mem0_ecc_dis_; }
  void ebuf_p1_fifo2_mem0_ecc_dis(const uint8_t &v) { ebuf_p1_fifo2_mem0_ecc_dis_=v; }





  uint8_t ebuf_p2_fifo0_mem0_ecc_dis() { return ebuf_p2_fifo0_mem0_ecc_dis_; }
  void ebuf_p2_fifo0_mem0_ecc_dis(const uint8_t &v) { ebuf_p2_fifo0_mem0_ecc_dis_=v; }





  uint8_t ebuf_p2_fifo1_mem0_ecc_dis() { return ebuf_p2_fifo1_mem0_ecc_dis_; }
  void ebuf_p2_fifo1_mem0_ecc_dis(const uint8_t &v) { ebuf_p2_fifo1_mem0_ecc_dis_=v; }





  uint8_t ebuf_p2_fifo2_mem0_ecc_dis() { return ebuf_p2_fifo2_mem0_ecc_dis_; }
  void ebuf_p2_fifo2_mem0_ecc_dis(const uint8_t &v) { ebuf_p2_fifo2_mem0_ecc_dis_=v; }





  uint8_t ebuf_p3_fifo0_mem0_ecc_dis() { return ebuf_p3_fifo0_mem0_ecc_dis_; }
  void ebuf_p3_fifo0_mem0_ecc_dis(const uint8_t &v) { ebuf_p3_fifo0_mem0_ecc_dis_=v; }





  uint8_t ebuf_p3_fifo1_mem0_ecc_dis() { return ebuf_p3_fifo1_mem0_ecc_dis_; }
  void ebuf_p3_fifo1_mem0_ecc_dis(const uint8_t &v) { ebuf_p3_fifo1_mem0_ecc_dis_=v; }





  uint8_t ebuf_p3_fifo2_mem0_ecc_dis() { return ebuf_p3_fifo2_mem0_ecc_dis_; }
  void ebuf_p3_fifo2_mem0_ecc_dis(const uint8_t &v) { ebuf_p3_fifo2_mem0_ecc_dis_=v; }





  uint8_t eth_cpu_fifo0_mem1_ecc_dis() { return eth_cpu_fifo0_mem1_ecc_dis_; }
  void eth_cpu_fifo0_mem1_ecc_dis(const uint8_t &v) { eth_cpu_fifo0_mem1_ecc_dis_=v; }





  uint8_t eth_cpu_fifo1_mem1_ecc_dis() { return eth_cpu_fifo1_mem1_ecc_dis_; }
  void eth_cpu_fifo1_mem1_ecc_dis(const uint8_t &v) { eth_cpu_fifo1_mem1_ecc_dis_=v; }





  uint8_t eth_cpu_fifo2_mem1_ecc_dis() { return eth_cpu_fifo2_mem1_ecc_dis_; }
  void eth_cpu_fifo2_mem1_ecc_dis(const uint8_t &v) { eth_cpu_fifo2_mem1_ecc_dis_=v; }





  uint8_t tbc_fifo0_mem1_ecc_dis() { return tbc_fifo0_mem1_ecc_dis_; }
  void tbc_fifo0_mem1_ecc_dis(const uint8_t &v) { tbc_fifo0_mem1_ecc_dis_=v; }





  uint8_t tbc_fifo1_mem1_ecc_dis() { return tbc_fifo1_mem1_ecc_dis_; }
  void tbc_fifo1_mem1_ecc_dis(const uint8_t &v) { tbc_fifo1_mem1_ecc_dis_=v; }





  uint8_t tbc_fifo2_mem1_ecc_dis() { return tbc_fifo2_mem1_ecc_dis_; }
  void tbc_fifo2_mem1_ecc_dis(const uint8_t &v) { tbc_fifo2_mem1_ecc_dis_=v; }





  uint8_t ebuf_p0_fifo0_mem1_ecc_dis() { return ebuf_p0_fifo0_mem1_ecc_dis_; }
  void ebuf_p0_fifo0_mem1_ecc_dis(const uint8_t &v) { ebuf_p0_fifo0_mem1_ecc_dis_=v; }





  uint8_t ebuf_p0_fifo1_mem1_ecc_dis() { return ebuf_p0_fifo1_mem1_ecc_dis_; }
  void ebuf_p0_fifo1_mem1_ecc_dis(const uint8_t &v) { ebuf_p0_fifo1_mem1_ecc_dis_=v; }





  uint8_t ebuf_p0_fifo2_mem1_ecc_dis() { return ebuf_p0_fifo2_mem1_ecc_dis_; }
  void ebuf_p0_fifo2_mem1_ecc_dis(const uint8_t &v) { ebuf_p0_fifo2_mem1_ecc_dis_=v; }





  uint8_t ebuf_p1_fifo0_mem1_ecc_dis() { return ebuf_p1_fifo0_mem1_ecc_dis_; }
  void ebuf_p1_fifo0_mem1_ecc_dis(const uint8_t &v) { ebuf_p1_fifo0_mem1_ecc_dis_=v; }





  uint8_t ebuf_p1_fifo1_mem1_ecc_dis() { return ebuf_p1_fifo1_mem1_ecc_dis_; }
  void ebuf_p1_fifo1_mem1_ecc_dis(const uint8_t &v) { ebuf_p1_fifo1_mem1_ecc_dis_=v; }





  uint8_t ebuf_p1_fifo2_mem1_ecc_dis() { return ebuf_p1_fifo2_mem1_ecc_dis_; }
  void ebuf_p1_fifo2_mem1_ecc_dis(const uint8_t &v) { ebuf_p1_fifo2_mem1_ecc_dis_=v; }





  uint8_t ebuf_p2_fifo0_mem1_ecc_dis() { return ebuf_p2_fifo0_mem1_ecc_dis_; }
  void ebuf_p2_fifo0_mem1_ecc_dis(const uint8_t &v) { ebuf_p2_fifo0_mem1_ecc_dis_=v; }





  uint8_t ebuf_p2_fifo1_mem1_ecc_dis() { return ebuf_p2_fifo1_mem1_ecc_dis_; }
  void ebuf_p2_fifo1_mem1_ecc_dis(const uint8_t &v) { ebuf_p2_fifo1_mem1_ecc_dis_=v; }





  uint8_t ebuf_p2_fifo2_mem1_ecc_dis() { return ebuf_p2_fifo2_mem1_ecc_dis_; }
  void ebuf_p2_fifo2_mem1_ecc_dis(const uint8_t &v) { ebuf_p2_fifo2_mem1_ecc_dis_=v; }





  uint8_t ebuf_p3_fifo0_mem1_ecc_dis() { return ebuf_p3_fifo0_mem1_ecc_dis_; }
  void ebuf_p3_fifo0_mem1_ecc_dis(const uint8_t &v) { ebuf_p3_fifo0_mem1_ecc_dis_=v; }





  uint8_t ebuf_p3_fifo1_mem1_ecc_dis() { return ebuf_p3_fifo1_mem1_ecc_dis_; }
  void ebuf_p3_fifo1_mem1_ecc_dis(const uint8_t &v) { ebuf_p3_fifo1_mem1_ecc_dis_=v; }





  uint8_t ebuf_p3_fifo2_mem1_ecc_dis() { return ebuf_p3_fifo2_mem1_ecc_dis_; }
  void ebuf_p3_fifo2_mem1_ecc_dis(const uint8_t &v) { ebuf_p3_fifo2_mem1_ecc_dis_=v; }





  uint8_t pgr_perf_mode_dis() { return pgr_perf_mode_dis_; }
  void pgr_perf_mode_dis(const uint8_t &v) { pgr_perf_mode_dis_=v; }

  bool read(
      uint32_t offset, uint32_t* data
      ) const {
    if (offset < 0x4) {
      if (read_callback_) read_callback_();
      *data = (pipe_id_ & 0x3);
      *data |= ((swap_en_ & 0x1) << 2);
      *data |= ((buffer0_ecc_dis_ & 0x1) << 3);
      *data |= ((buffer1_ecc_dis_ & 0x1) << 4);
      *data |= ((buffer2_ecc_dis_ & 0x1) << 5);
      *data |= ((buffer3_ecc_dis_ & 0x1) << 6);
      *data |= ((phase0_ecc_dis_ & 0x1) << 7);
      *data |= ((pfc0_ecc_dis_ & 0x1) << 8);
      *data |= ((pfc1_ecc_dis_ & 0x1) << 9);
      *data |= (crc_gen_ << 10);
      *data |= ((eth_cpu_fifo0_mem0_ecc_dis_ & 0x1) << 18);
      *data |= ((eth_cpu_fifo1_mem0_ecc_dis_ & 0x1) << 19);
      *data |= ((eth_cpu_fifo2_mem0_ecc_dis_ & 0x1) << 20);
      *data |= ((tbc_fifo0_mem0_ecc_dis_ & 0x1) << 21);
      *data |= ((tbc_fifo1_mem0_ecc_dis_ & 0x1) << 22);
      *data |= ((tbc_fifo2_mem0_ecc_dis_ & 0x1) << 23);
      *data |= ((ebuf_p0_fifo0_mem0_ecc_dis_ & 0x1) << 24);
      *data |= ((ebuf_p0_fifo1_mem0_ecc_dis_ & 0x1) << 25);
      *data |= ((ebuf_p0_fifo2_mem0_ecc_dis_ & 0x1) << 26);
      *data |= ((ebuf_p1_fifo0_mem0_ecc_dis_ & 0x1) << 27);
      *data |= ((ebuf_p1_fifo1_mem0_ecc_dis_ & 0x1) << 28);
      *data |= ((ebuf_p1_fifo2_mem0_ecc_dis_ & 0x1) << 29);
      *data |= ((ebuf_p2_fifo0_mem0_ecc_dis_ & 0x1) << 30);
      *data |= ((ebuf_p2_fifo1_mem0_ecc_dis_ & 0x1) << 31);
    }
    else if (offset >= 0x4 && offset < 0x8) {
      if (read_callback_) read_callback_();
      *data = (ebuf_p2_fifo2_mem0_ecc_dis_ & 0x1);
      *data |= ((ebuf_p3_fifo0_mem0_ecc_dis_ & 0x1) << 1);
      *data |= ((ebuf_p3_fifo1_mem0_ecc_dis_ & 0x1) << 2);
      *data |= ((ebuf_p3_fifo2_mem0_ecc_dis_ & 0x1) << 3);
      *data |= ((eth_cpu_fifo0_mem1_ecc_dis_ & 0x1) << 4);
      *data |= ((eth_cpu_fifo1_mem1_ecc_dis_ & 0x1) << 5);
      *data |= ((eth_cpu_fifo2_mem1_ecc_dis_ & 0x1) << 6);
      *data |= ((tbc_fifo0_mem1_ecc_dis_ & 0x1) << 7);
      *data |= ((tbc_fifo1_mem1_ecc_dis_ & 0x1) << 8);
      *data |= ((tbc_fifo2_mem1_ecc_dis_ & 0x1) << 9);
      *data |= ((ebuf_p0_fifo0_mem1_ecc_dis_ & 0x1) << 10);
      *data |= ((ebuf_p0_fifo1_mem1_ecc_dis_ & 0x1) << 11);
      *data |= ((ebuf_p0_fifo2_mem1_ecc_dis_ & 0x1) << 12);
      *data |= ((ebuf_p1_fifo0_mem1_ecc_dis_ & 0x1) << 13);
      *data |= ((ebuf_p1_fifo1_mem1_ecc_dis_ & 0x1) << 14);
      *data |= ((ebuf_p1_fifo2_mem1_ecc_dis_ & 0x1) << 15);
      *data |= ((ebuf_p2_fifo0_mem1_ecc_dis_ & 0x1) << 16);
      *data |= ((ebuf_p2_fifo1_mem1_ecc_dis_ & 0x1) << 17);
      *data |= ((ebuf_p2_fifo2_mem1_ecc_dis_ & 0x1) << 18);
      *data |= ((ebuf_p3_fifo0_mem1_ecc_dis_ & 0x1) << 19);
      *data |= ((ebuf_p3_fifo1_mem1_ecc_dis_ & 0x1) << 20);
      *data |= ((ebuf_p3_fifo2_mem1_ecc_dis_ & 0x1) << 21);
      *data |= ((pgr_perf_mode_dis_ & 0x1) << 22);
    }
    else {
      assert(0);
    }
    return true;
  }


  bool write(
      uint32_t offset, uint32_t data
      ) {
    if (offset < 0x4) {
      pipe_id_ = (data & 0x3);
      swap_en_ = ((data >> 2) & 0x1);
      buffer0_ecc_dis_ = ((data >> 3) & 0x1);
      buffer1_ecc_dis_ = ((data >> 4) & 0x1);
      buffer2_ecc_dis_ = ((data >> 5) & 0x1);
      buffer3_ecc_dis_ = ((data >> 6) & 0x1);
      phase0_ecc_dis_ = ((data >> 7) & 0x1);
      pfc0_ecc_dis_ = ((data >> 8) & 0x1);
      pfc1_ecc_dis_ = ((data >> 9) & 0x1);
      crc_gen_ = (data >> 10);
      eth_cpu_fifo0_mem0_ecc_dis_ = ((data >> 18) & 0x1);
      eth_cpu_fifo1_mem0_ecc_dis_ = ((data >> 19) & 0x1);
      eth_cpu_fifo2_mem0_ecc_dis_ = ((data >> 20) & 0x1);
      tbc_fifo0_mem0_ecc_dis_ = ((data >> 21) & 0x1);
      tbc_fifo1_mem0_ecc_dis_ = ((data >> 22) & 0x1);
      tbc_fifo2_mem0_ecc_dis_ = ((data >> 23) & 0x1);
      ebuf_p0_fifo0_mem0_ecc_dis_ = ((data >> 24) & 0x1);
      ebuf_p0_fifo1_mem0_ecc_dis_ = ((data >> 25) & 0x1);
      ebuf_p0_fifo2_mem0_ecc_dis_ = ((data >> 26) & 0x1);
      ebuf_p1_fifo0_mem0_ecc_dis_ = ((data >> 27) & 0x1);
      ebuf_p1_fifo1_mem0_ecc_dis_ = ((data >> 28) & 0x1);
      ebuf_p1_fifo2_mem0_ecc_dis_ = ((data >> 29) & 0x1);
      ebuf_p2_fifo0_mem0_ecc_dis_ = ((data >> 30) & 0x1);
      ebuf_p2_fifo1_mem0_ecc_dis_ = ((data >> 31) & 0x1);
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x4 && offset < 0x8) {
      ebuf_p2_fifo2_mem0_ecc_dis_ = (data & 0x1);
      ebuf_p3_fifo0_mem0_ecc_dis_ = ((data >> 1) & 0x1);
      ebuf_p3_fifo1_mem0_ecc_dis_ = ((data >> 2) & 0x1);
      ebuf_p3_fifo2_mem0_ecc_dis_ = ((data >> 3) & 0x1);
      eth_cpu_fifo0_mem1_ecc_dis_ = ((data >> 4) & 0x1);
      eth_cpu_fifo1_mem1_ecc_dis_ = ((data >> 5) & 0x1);
      eth_cpu_fifo2_mem1_ecc_dis_ = ((data >> 6) & 0x1);
      tbc_fifo0_mem1_ecc_dis_ = ((data >> 7) & 0x1);
      tbc_fifo1_mem1_ecc_dis_ = ((data >> 8) & 0x1);
      tbc_fifo2_mem1_ecc_dis_ = ((data >> 9) & 0x1);
      ebuf_p0_fifo0_mem1_ecc_dis_ = ((data >> 10) & 0x1);
      ebuf_p0_fifo1_mem1_ecc_dis_ = ((data >> 11) & 0x1);
      ebuf_p0_fifo2_mem1_ecc_dis_ = ((data >> 12) & 0x1);
      ebuf_p1_fifo0_mem1_ecc_dis_ = ((data >> 13) & 0x1);
      ebuf_p1_fifo1_mem1_ecc_dis_ = ((data >> 14) & 0x1);
      ebuf_p1_fifo2_mem1_ecc_dis_ = ((data >> 15) & 0x1);
      ebuf_p2_fifo0_mem1_ecc_dis_ = ((data >> 16) & 0x1);
      ebuf_p2_fifo1_mem1_ecc_dis_ = ((data >> 17) & 0x1);
      ebuf_p2_fifo2_mem1_ecc_dis_ = ((data >> 18) & 0x1);
      ebuf_p3_fifo0_mem1_ecc_dis_ = ((data >> 19) & 0x1);
      ebuf_p3_fifo1_mem1_ecc_dis_ = ((data >> 20) & 0x1);
      ebuf_p3_fifo2_mem1_ecc_dis_ = ((data >> 21) & 0x1);
      pgr_perf_mode_dis_ = ((data >> 22) & 0x1);
      if (write_callback_) write_callback_();
    }
    else {
      assert(0);
    }
    return true;
  }

  void reset(
      
      ) {
    pipe_id_ = 0x0;
    swap_en_ = 0x0;
    buffer0_ecc_dis_ = 0x0;
    buffer1_ecc_dis_ = 0x0;
    buffer2_ecc_dis_ = 0x0;
    buffer3_ecc_dis_ = 0x0;
    phase0_ecc_dis_ = 0x0;
    pfc0_ecc_dis_ = 0x0;
    pfc1_ecc_dis_ = 0x0;
    crc_gen_ = 0x0;
    eth_cpu_fifo0_mem0_ecc_dis_ = 0x0;
    eth_cpu_fifo1_mem0_ecc_dis_ = 0x0;
    eth_cpu_fifo2_mem0_ecc_dis_ = 0x0;
    tbc_fifo0_mem0_ecc_dis_ = 0x0;
    tbc_fifo1_mem0_ecc_dis_ = 0x0;
    tbc_fifo2_mem0_ecc_dis_ = 0x0;
    ebuf_p0_fifo0_mem0_ecc_dis_ = 0x0;
    ebuf_p0_fifo1_mem0_ecc_dis_ = 0x0;
    ebuf_p0_fifo2_mem0_ecc_dis_ = 0x0;
    ebuf_p1_fifo0_mem0_ecc_dis_ = 0x0;
    ebuf_p1_fifo1_mem0_ecc_dis_ = 0x0;
    ebuf_p1_fifo2_mem0_ecc_dis_ = 0x0;
    ebuf_p2_fifo0_mem0_ecc_dis_ = 0x0;
    ebuf_p2_fifo1_mem0_ecc_dis_ = 0x0;
    ebuf_p2_fifo2_mem0_ecc_dis_ = 0x0;
    ebuf_p3_fifo0_mem0_ecc_dis_ = 0x0;
    ebuf_p3_fifo1_mem0_ecc_dis_ = 0x0;
    ebuf_p3_fifo2_mem0_ecc_dis_ = 0x0;
    eth_cpu_fifo0_mem1_ecc_dis_ = 0x0;
    eth_cpu_fifo1_mem1_ecc_dis_ = 0x0;
    eth_cpu_fifo2_mem1_ecc_dis_ = 0x0;
    tbc_fifo0_mem1_ecc_dis_ = 0x0;
    tbc_fifo1_mem1_ecc_dis_ = 0x0;
    tbc_fifo2_mem1_ecc_dis_ = 0x0;
    ebuf_p0_fifo0_mem1_ecc_dis_ = 0x0;
    ebuf_p0_fifo1_mem1_ecc_dis_ = 0x0;
    ebuf_p0_fifo2_mem1_ecc_dis_ = 0x0;
    ebuf_p1_fifo0_mem1_ecc_dis_ = 0x0;
    ebuf_p1_fifo1_mem1_ecc_dis_ = 0x0;
    ebuf_p1_fifo2_mem1_ecc_dis_ = 0x0;
    ebuf_p2_fifo0_mem1_ecc_dis_ = 0x0;
    ebuf_p2_fifo1_mem1_ecc_dis_ = 0x0;
    ebuf_p2_fifo2_mem1_ecc_dis_ = 0x0;
    ebuf_p3_fifo0_mem1_ecc_dis_ = 0x0;
    ebuf_p3_fifo1_mem1_ecc_dis_ = 0x0;
    ebuf_p3_fifo2_mem1_ecc_dis_ = 0x0;
    pgr_perf_mode_dis_ = 0x0;
    if (write_callback_) write_callback_();
  }

  std::string to_string(
      uint32_t offset, bool print_zeros = false, std::string indent_string = ""
      ) const {
    std::string r("");
    bool all_zeros=true;
    r += indent_string + std::string("PgrPgenCtrlMutable") + ":\n";
    r += indent_string + "  " + std::string("pipe_id") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(pipe_id_) ) + "\n";
    all_zeros &= (0 == pipe_id_);
    r += indent_string + "  " + std::string("swap_en") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(swap_en_) ) + "\n";
    all_zeros &= (0 == swap_en_);
    r += indent_string + "  " + std::string("buffer0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(buffer0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == buffer0_ecc_dis_);
    r += indent_string + "  " + std::string("buffer1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(buffer1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == buffer1_ecc_dis_);
    r += indent_string + "  " + std::string("buffer2_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(buffer2_ecc_dis_) ) + "\n";
    all_zeros &= (0 == buffer2_ecc_dis_);
    r += indent_string + "  " + std::string("buffer3_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(buffer3_ecc_dis_) ) + "\n";
    all_zeros &= (0 == buffer3_ecc_dis_);
    r += indent_string + "  " + std::string("phase0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(phase0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == phase0_ecc_dis_);
    r += indent_string + "  " + std::string("pfc0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(pfc0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == pfc0_ecc_dis_);
    r += indent_string + "  " + std::string("pfc1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(pfc1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == pfc1_ecc_dis_);
    r += indent_string + "  " + std::string("crc_gen") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(crc_gen_) ) + "\n";
    all_zeros &= (0 == crc_gen_);
    r += indent_string + "  " + std::string("eth_cpu_fifo0_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(eth_cpu_fifo0_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == eth_cpu_fifo0_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("eth_cpu_fifo1_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(eth_cpu_fifo1_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == eth_cpu_fifo1_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("eth_cpu_fifo2_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(eth_cpu_fifo2_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == eth_cpu_fifo2_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("tbc_fifo0_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(tbc_fifo0_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == tbc_fifo0_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("tbc_fifo1_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(tbc_fifo1_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == tbc_fifo1_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("tbc_fifo2_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(tbc_fifo2_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == tbc_fifo2_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p0_fifo0_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p0_fifo0_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p0_fifo0_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p0_fifo1_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p0_fifo1_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p0_fifo1_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p0_fifo2_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p0_fifo2_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p0_fifo2_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p1_fifo0_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p1_fifo0_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p1_fifo0_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p1_fifo1_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p1_fifo1_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p1_fifo1_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p1_fifo2_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p1_fifo2_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p1_fifo2_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p2_fifo0_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p2_fifo0_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p2_fifo0_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p2_fifo1_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p2_fifo1_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p2_fifo1_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p2_fifo2_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p2_fifo2_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p2_fifo2_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p3_fifo0_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p3_fifo0_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p3_fifo0_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p3_fifo1_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p3_fifo1_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p3_fifo1_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p3_fifo2_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p3_fifo2_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p3_fifo2_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("eth_cpu_fifo0_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(eth_cpu_fifo0_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == eth_cpu_fifo0_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("eth_cpu_fifo1_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(eth_cpu_fifo1_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == eth_cpu_fifo1_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("eth_cpu_fifo2_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(eth_cpu_fifo2_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == eth_cpu_fifo2_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("tbc_fifo0_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(tbc_fifo0_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == tbc_fifo0_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("tbc_fifo1_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(tbc_fifo1_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == tbc_fifo1_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("tbc_fifo2_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(tbc_fifo2_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == tbc_fifo2_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p0_fifo0_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p0_fifo0_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p0_fifo0_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p0_fifo1_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p0_fifo1_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p0_fifo1_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p0_fifo2_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p0_fifo2_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p0_fifo2_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p1_fifo0_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p1_fifo0_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p1_fifo0_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p1_fifo1_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p1_fifo1_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p1_fifo1_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p1_fifo2_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p1_fifo2_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p1_fifo2_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p2_fifo0_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p2_fifo0_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p2_fifo0_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p2_fifo1_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p2_fifo1_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p2_fifo1_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p2_fifo2_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p2_fifo2_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p2_fifo2_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p3_fifo0_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p3_fifo0_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p3_fifo0_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p3_fifo1_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p3_fifo1_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p3_fifo1_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p3_fifo2_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p3_fifo2_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p3_fifo2_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("pgr_perf_mode_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(pgr_perf_mode_dis_) ) + "\n";
    all_zeros &= (0 == pgr_perf_mode_dis_);
    if (all_zeros && !print_zeros) {
      return("");
    }
    else {
      return r;
    }
  }

  std::string to_string(
      bool print_zeros = false, std::string indent_string = ""
      ) const {
    std::string r("");
    bool all_zeros=true;
    r += indent_string + std::string("PgrPgenCtrlMutable") + ":\n";
    r += indent_string + "  " + std::string("pipe_id") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(pipe_id_) ) + "\n";
    all_zeros &= (0 == pipe_id_);
    r += indent_string + "  " + std::string("swap_en") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(swap_en_) ) + "\n";
    all_zeros &= (0 == swap_en_);
    r += indent_string + "  " + std::string("buffer0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(buffer0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == buffer0_ecc_dis_);
    r += indent_string + "  " + std::string("buffer1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(buffer1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == buffer1_ecc_dis_);
    r += indent_string + "  " + std::string("buffer2_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(buffer2_ecc_dis_) ) + "\n";
    all_zeros &= (0 == buffer2_ecc_dis_);
    r += indent_string + "  " + std::string("buffer3_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(buffer3_ecc_dis_) ) + "\n";
    all_zeros &= (0 == buffer3_ecc_dis_);
    r += indent_string + "  " + std::string("phase0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(phase0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == phase0_ecc_dis_);
    r += indent_string + "  " + std::string("pfc0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(pfc0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == pfc0_ecc_dis_);
    r += indent_string + "  " + std::string("pfc1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(pfc1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == pfc1_ecc_dis_);
    r += indent_string + "  " + std::string("crc_gen") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(crc_gen_) ) + "\n";
    all_zeros &= (0 == crc_gen_);
    r += indent_string + "  " + std::string("eth_cpu_fifo0_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(eth_cpu_fifo0_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == eth_cpu_fifo0_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("eth_cpu_fifo1_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(eth_cpu_fifo1_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == eth_cpu_fifo1_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("eth_cpu_fifo2_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(eth_cpu_fifo2_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == eth_cpu_fifo2_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("tbc_fifo0_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(tbc_fifo0_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == tbc_fifo0_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("tbc_fifo1_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(tbc_fifo1_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == tbc_fifo1_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("tbc_fifo2_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(tbc_fifo2_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == tbc_fifo2_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p0_fifo0_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p0_fifo0_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p0_fifo0_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p0_fifo1_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p0_fifo1_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p0_fifo1_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p0_fifo2_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p0_fifo2_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p0_fifo2_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p1_fifo0_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p1_fifo0_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p1_fifo0_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p1_fifo1_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p1_fifo1_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p1_fifo1_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p1_fifo2_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p1_fifo2_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p1_fifo2_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p2_fifo0_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p2_fifo0_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p2_fifo0_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p2_fifo1_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p2_fifo1_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p2_fifo1_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p2_fifo2_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p2_fifo2_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p2_fifo2_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p3_fifo0_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p3_fifo0_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p3_fifo0_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p3_fifo1_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p3_fifo1_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p3_fifo1_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p3_fifo2_mem0_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p3_fifo2_mem0_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p3_fifo2_mem0_ecc_dis_);
    r += indent_string + "  " + std::string("eth_cpu_fifo0_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(eth_cpu_fifo0_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == eth_cpu_fifo0_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("eth_cpu_fifo1_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(eth_cpu_fifo1_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == eth_cpu_fifo1_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("eth_cpu_fifo2_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(eth_cpu_fifo2_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == eth_cpu_fifo2_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("tbc_fifo0_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(tbc_fifo0_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == tbc_fifo0_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("tbc_fifo1_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(tbc_fifo1_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == tbc_fifo1_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("tbc_fifo2_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(tbc_fifo2_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == tbc_fifo2_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p0_fifo0_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p0_fifo0_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p0_fifo0_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p0_fifo1_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p0_fifo1_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p0_fifo1_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p0_fifo2_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p0_fifo2_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p0_fifo2_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p1_fifo0_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p1_fifo0_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p1_fifo0_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p1_fifo1_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p1_fifo1_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p1_fifo1_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p1_fifo2_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p1_fifo2_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p1_fifo2_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p2_fifo0_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p2_fifo0_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p2_fifo0_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p2_fifo1_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p2_fifo1_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p2_fifo1_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p2_fifo2_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p2_fifo2_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p2_fifo2_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p3_fifo0_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p3_fifo0_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p3_fifo0_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p3_fifo1_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p3_fifo1_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p3_fifo1_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("ebuf_p3_fifo2_mem1_ecc_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(ebuf_p3_fifo2_mem1_ecc_dis_) ) + "\n";
    all_zeros &= (0 == ebuf_p3_fifo2_mem1_ecc_dis_);
    r += indent_string + "  " + std::string("pgr_perf_mode_dis") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(pgr_perf_mode_dis_) ) + "\n";
    all_zeros &= (0 == pgr_perf_mode_dis_);
    if (all_zeros && !print_zeros) {
      return("");
    }
    else {
      return r;
    }
  }

private:
  uint8_t pipe_id_;
  uint8_t swap_en_;
  uint8_t buffer0_ecc_dis_;
  uint8_t buffer1_ecc_dis_;
  uint8_t buffer2_ecc_dis_;
  uint8_t buffer3_ecc_dis_;
  uint8_t phase0_ecc_dis_;
  uint8_t pfc0_ecc_dis_;
  uint8_t pfc1_ecc_dis_;
  uint8_t crc_gen_;
  uint8_t eth_cpu_fifo0_mem0_ecc_dis_;
  uint8_t eth_cpu_fifo1_mem0_ecc_dis_;
  uint8_t eth_cpu_fifo2_mem0_ecc_dis_;
  uint8_t tbc_fifo0_mem0_ecc_dis_;
  uint8_t tbc_fifo1_mem0_ecc_dis_;
  uint8_t tbc_fifo2_mem0_ecc_dis_;
  uint8_t ebuf_p0_fifo0_mem0_ecc_dis_;
  uint8_t ebuf_p0_fifo1_mem0_ecc_dis_;
  uint8_t ebuf_p0_fifo2_mem0_ecc_dis_;
  uint8_t ebuf_p1_fifo0_mem0_ecc_dis_;
  uint8_t ebuf_p1_fifo1_mem0_ecc_dis_;
  uint8_t ebuf_p1_fifo2_mem0_ecc_dis_;
  uint8_t ebuf_p2_fifo0_mem0_ecc_dis_;
  uint8_t ebuf_p2_fifo1_mem0_ecc_dis_;
  uint8_t ebuf_p2_fifo2_mem0_ecc_dis_;
  uint8_t ebuf_p3_fifo0_mem0_ecc_dis_;
  uint8_t ebuf_p3_fifo1_mem0_ecc_dis_;
  uint8_t ebuf_p3_fifo2_mem0_ecc_dis_;
  uint8_t eth_cpu_fifo0_mem1_ecc_dis_;
  uint8_t eth_cpu_fifo1_mem1_ecc_dis_;
  uint8_t eth_cpu_fifo2_mem1_ecc_dis_;
  uint8_t tbc_fifo0_mem1_ecc_dis_;
  uint8_t tbc_fifo1_mem1_ecc_dis_;
  uint8_t tbc_fifo2_mem1_ecc_dis_;
  uint8_t ebuf_p0_fifo0_mem1_ecc_dis_;
  uint8_t ebuf_p0_fifo1_mem1_ecc_dis_;
  uint8_t ebuf_p0_fifo2_mem1_ecc_dis_;
  uint8_t ebuf_p1_fifo0_mem1_ecc_dis_;
  uint8_t ebuf_p1_fifo1_mem1_ecc_dis_;
  uint8_t ebuf_p1_fifo2_mem1_ecc_dis_;
  uint8_t ebuf_p2_fifo0_mem1_ecc_dis_;
  uint8_t ebuf_p2_fifo1_mem1_ecc_dis_;
  uint8_t ebuf_p2_fifo2_mem1_ecc_dis_;
  uint8_t ebuf_p3_fifo0_mem1_ecc_dis_;
  uint8_t ebuf_p3_fifo1_mem1_ecc_dis_;
  uint8_t ebuf_p3_fifo2_mem1_ecc_dis_;
  uint8_t pgr_perf_mode_dis_;
private:
  static int StartOffset(
      int index_pipe_addrmap
      ) {
    int offset=0;
    offset += 0x4000000; // to get to pipes
    assert(index_pipe_addrmap < 4);
    offset += index_pipe_addrmap * 0x1000000; // pipe_addrmap[]
    offset += 0xc00000; // to get to pardereg
    offset += 0x34000; // to get to pgrreg
    offset += 0x2000; // to get to pgr_common
    offset += 0x238; // to get to pgen_ctrl
    return offset;
  }

};










  }; // namespace register_classes
}; // namespace jbayB0

#endif // __REGISTER_INCLUDES_PGR_PGEN_CTRL_MUTABLE_H__
