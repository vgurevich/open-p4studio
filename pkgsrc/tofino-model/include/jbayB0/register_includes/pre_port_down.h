/*******************************************************************************
 *  Copyright (C) 2024 Intel Corporation
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions
 *  and limitations under the License.
 *
 *
 *  SPDX-License-Identifier: Apache-2.0
 ******************************************************************************/

// generated by split_classes.pl
#ifndef __REGISTER_INCLUDES_PRE_PORT_DOWN_H__
#define __REGISTER_INCLUDES_PRE_PORT_DOWN_H__


#include <cstdint>
#include <cassert>
#include <array>
#include <vector>
#include <string>
#include <boost/lexical_cast.hpp>
#include <boost/format.hpp>
#include <model_core/register_block.h>
#include <shared/bitvector.h>










namespace jbayB0 {
  namespace register_classes {

class PrePortDown : public model_core::RegisterBlock<RegisterCallback> {
public:
  PrePortDown(
      int chipNumber, RegisterCallback& write_callback = 0, RegisterCallback& read_callback = 0
  )
    : RegisterBlock(chipNumber, StartOffset(), 36, false, write_callback, read_callback, std::string("PrePortDown"))
    {
    }
  PrePortDown(
      
  )
    : RegisterBlock(0, 0, 0, false, 0, 0, "PrePortDown")
    {
    }
public:







  uint8_t &port_down(int j0) { return port_down_[j0]; }

  bool read(
      uint32_t offset, uint32_t* data
      ) const {
    if (offset < 0x4) {
      if (read_callback_) read_callback_();
      *data = (port_down_[0] & 0x1);
      *data |= ((port_down_[1] & 0x1) << 1);
      *data |= ((port_down_[2] & 0x1) << 2);
      *data |= ((port_down_[3] & 0x1) << 3);
      *data |= ((port_down_[4] & 0x1) << 4);
      *data |= ((port_down_[5] & 0x1) << 5);
      *data |= ((port_down_[6] & 0x1) << 6);
      *data |= ((port_down_[7] & 0x1) << 7);
      *data |= ((port_down_[8] & 0x1) << 8);
      *data |= ((port_down_[9] & 0x1) << 9);
      *data |= ((port_down_[10] & 0x1) << 10);
      *data |= ((port_down_[11] & 0x1) << 11);
      *data |= ((port_down_[12] & 0x1) << 12);
      *data |= ((port_down_[13] & 0x1) << 13);
      *data |= ((port_down_[14] & 0x1) << 14);
      *data |= ((port_down_[15] & 0x1) << 15);
      *data |= ((port_down_[16] & 0x1) << 16);
      *data |= ((port_down_[17] & 0x1) << 17);
      *data |= ((port_down_[18] & 0x1) << 18);
      *data |= ((port_down_[19] & 0x1) << 19);
      *data |= ((port_down_[20] & 0x1) << 20);
      *data |= ((port_down_[21] & 0x1) << 21);
      *data |= ((port_down_[22] & 0x1) << 22);
      *data |= ((port_down_[23] & 0x1) << 23);
      *data |= ((port_down_[24] & 0x1) << 24);
      *data |= ((port_down_[25] & 0x1) << 25);
      *data |= ((port_down_[26] & 0x1) << 26);
      *data |= ((port_down_[27] & 0x1) << 27);
      *data |= ((port_down_[28] & 0x1) << 28);
      *data |= ((port_down_[29] & 0x1) << 29);
      *data |= ((port_down_[30] & 0x1) << 30);
      *data |= ((port_down_[31] & 0x1) << 31);
    }
    else if (offset >= 0x4 && offset < 0x8) {
      if (read_callback_) read_callback_();
      *data = (port_down_[32] & 0x1);
      *data |= ((port_down_[33] & 0x1) << 1);
      *data |= ((port_down_[34] & 0x1) << 2);
      *data |= ((port_down_[35] & 0x1) << 3);
      *data |= ((port_down_[36] & 0x1) << 4);
      *data |= ((port_down_[37] & 0x1) << 5);
      *data |= ((port_down_[38] & 0x1) << 6);
      *data |= ((port_down_[39] & 0x1) << 7);
      *data |= ((port_down_[40] & 0x1) << 8);
      *data |= ((port_down_[41] & 0x1) << 9);
      *data |= ((port_down_[42] & 0x1) << 10);
      *data |= ((port_down_[43] & 0x1) << 11);
      *data |= ((port_down_[44] & 0x1) << 12);
      *data |= ((port_down_[45] & 0x1) << 13);
      *data |= ((port_down_[46] & 0x1) << 14);
      *data |= ((port_down_[47] & 0x1) << 15);
      *data |= ((port_down_[48] & 0x1) << 16);
      *data |= ((port_down_[49] & 0x1) << 17);
      *data |= ((port_down_[50] & 0x1) << 18);
      *data |= ((port_down_[51] & 0x1) << 19);
      *data |= ((port_down_[52] & 0x1) << 20);
      *data |= ((port_down_[53] & 0x1) << 21);
      *data |= ((port_down_[54] & 0x1) << 22);
      *data |= ((port_down_[55] & 0x1) << 23);
      *data |= ((port_down_[56] & 0x1) << 24);
      *data |= ((port_down_[57] & 0x1) << 25);
      *data |= ((port_down_[58] & 0x1) << 26);
      *data |= ((port_down_[59] & 0x1) << 27);
      *data |= ((port_down_[60] & 0x1) << 28);
      *data |= ((port_down_[61] & 0x1) << 29);
      *data |= ((port_down_[62] & 0x1) << 30);
      *data |= ((port_down_[63] & 0x1) << 31);
    }
    else if (offset >= 0x8 && offset < 0xc) {
      if (read_callback_) read_callback_();
      *data = (port_down_[64] & 0x1);
      *data |= ((port_down_[65] & 0x1) << 1);
      *data |= ((port_down_[66] & 0x1) << 2);
      *data |= ((port_down_[67] & 0x1) << 3);
      *data |= ((port_down_[68] & 0x1) << 4);
      *data |= ((port_down_[69] & 0x1) << 5);
      *data |= ((port_down_[70] & 0x1) << 6);
      *data |= ((port_down_[71] & 0x1) << 7);
      *data |= ((port_down_[72] & 0x1) << 8);
      *data |= ((port_down_[73] & 0x1) << 9);
      *data |= ((port_down_[74] & 0x1) << 10);
      *data |= ((port_down_[75] & 0x1) << 11);
      *data |= ((port_down_[76] & 0x1) << 12);
      *data |= ((port_down_[77] & 0x1) << 13);
      *data |= ((port_down_[78] & 0x1) << 14);
      *data |= ((port_down_[79] & 0x1) << 15);
      *data |= ((port_down_[80] & 0x1) << 16);
      *data |= ((port_down_[81] & 0x1) << 17);
      *data |= ((port_down_[82] & 0x1) << 18);
      *data |= ((port_down_[83] & 0x1) << 19);
      *data |= ((port_down_[84] & 0x1) << 20);
      *data |= ((port_down_[85] & 0x1) << 21);
      *data |= ((port_down_[86] & 0x1) << 22);
      *data |= ((port_down_[87] & 0x1) << 23);
      *data |= ((port_down_[88] & 0x1) << 24);
      *data |= ((port_down_[89] & 0x1) << 25);
      *data |= ((port_down_[90] & 0x1) << 26);
      *data |= ((port_down_[91] & 0x1) << 27);
      *data |= ((port_down_[92] & 0x1) << 28);
      *data |= ((port_down_[93] & 0x1) << 29);
      *data |= ((port_down_[94] & 0x1) << 30);
      *data |= ((port_down_[95] & 0x1) << 31);
    }
    else if (offset >= 0xc && offset < 0x10) {
      if (read_callback_) read_callback_();
      *data = (port_down_[96] & 0x1);
      *data |= ((port_down_[97] & 0x1) << 1);
      *data |= ((port_down_[98] & 0x1) << 2);
      *data |= ((port_down_[99] & 0x1) << 3);
      *data |= ((port_down_[100] & 0x1) << 4);
      *data |= ((port_down_[101] & 0x1) << 5);
      *data |= ((port_down_[102] & 0x1) << 6);
      *data |= ((port_down_[103] & 0x1) << 7);
      *data |= ((port_down_[104] & 0x1) << 8);
      *data |= ((port_down_[105] & 0x1) << 9);
      *data |= ((port_down_[106] & 0x1) << 10);
      *data |= ((port_down_[107] & 0x1) << 11);
      *data |= ((port_down_[108] & 0x1) << 12);
      *data |= ((port_down_[109] & 0x1) << 13);
      *data |= ((port_down_[110] & 0x1) << 14);
      *data |= ((port_down_[111] & 0x1) << 15);
      *data |= ((port_down_[112] & 0x1) << 16);
      *data |= ((port_down_[113] & 0x1) << 17);
      *data |= ((port_down_[114] & 0x1) << 18);
      *data |= ((port_down_[115] & 0x1) << 19);
      *data |= ((port_down_[116] & 0x1) << 20);
      *data |= ((port_down_[117] & 0x1) << 21);
      *data |= ((port_down_[118] & 0x1) << 22);
      *data |= ((port_down_[119] & 0x1) << 23);
      *data |= ((port_down_[120] & 0x1) << 24);
      *data |= ((port_down_[121] & 0x1) << 25);
      *data |= ((port_down_[122] & 0x1) << 26);
      *data |= ((port_down_[123] & 0x1) << 27);
      *data |= ((port_down_[124] & 0x1) << 28);
      *data |= ((port_down_[125] & 0x1) << 29);
      *data |= ((port_down_[126] & 0x1) << 30);
      *data |= ((port_down_[127] & 0x1) << 31);
    }
    else if (offset >= 0x10 && offset < 0x14) {
      if (read_callback_) read_callback_();
      *data = (port_down_[128] & 0x1);
      *data |= ((port_down_[129] & 0x1) << 1);
      *data |= ((port_down_[130] & 0x1) << 2);
      *data |= ((port_down_[131] & 0x1) << 3);
      *data |= ((port_down_[132] & 0x1) << 4);
      *data |= ((port_down_[133] & 0x1) << 5);
      *data |= ((port_down_[134] & 0x1) << 6);
      *data |= ((port_down_[135] & 0x1) << 7);
      *data |= ((port_down_[136] & 0x1) << 8);
      *data |= ((port_down_[137] & 0x1) << 9);
      *data |= ((port_down_[138] & 0x1) << 10);
      *data |= ((port_down_[139] & 0x1) << 11);
      *data |= ((port_down_[140] & 0x1) << 12);
      *data |= ((port_down_[141] & 0x1) << 13);
      *data |= ((port_down_[142] & 0x1) << 14);
      *data |= ((port_down_[143] & 0x1) << 15);
      *data |= ((port_down_[144] & 0x1) << 16);
      *data |= ((port_down_[145] & 0x1) << 17);
      *data |= ((port_down_[146] & 0x1) << 18);
      *data |= ((port_down_[147] & 0x1) << 19);
      *data |= ((port_down_[148] & 0x1) << 20);
      *data |= ((port_down_[149] & 0x1) << 21);
      *data |= ((port_down_[150] & 0x1) << 22);
      *data |= ((port_down_[151] & 0x1) << 23);
      *data |= ((port_down_[152] & 0x1) << 24);
      *data |= ((port_down_[153] & 0x1) << 25);
      *data |= ((port_down_[154] & 0x1) << 26);
      *data |= ((port_down_[155] & 0x1) << 27);
      *data |= ((port_down_[156] & 0x1) << 28);
      *data |= ((port_down_[157] & 0x1) << 29);
      *data |= ((port_down_[158] & 0x1) << 30);
      *data |= ((port_down_[159] & 0x1) << 31);
    }
    else if (offset >= 0x14 && offset < 0x18) {
      if (read_callback_) read_callback_();
      *data = (port_down_[160] & 0x1);
      *data |= ((port_down_[161] & 0x1) << 1);
      *data |= ((port_down_[162] & 0x1) << 2);
      *data |= ((port_down_[163] & 0x1) << 3);
      *data |= ((port_down_[164] & 0x1) << 4);
      *data |= ((port_down_[165] & 0x1) << 5);
      *data |= ((port_down_[166] & 0x1) << 6);
      *data |= ((port_down_[167] & 0x1) << 7);
      *data |= ((port_down_[168] & 0x1) << 8);
      *data |= ((port_down_[169] & 0x1) << 9);
      *data |= ((port_down_[170] & 0x1) << 10);
      *data |= ((port_down_[171] & 0x1) << 11);
      *data |= ((port_down_[172] & 0x1) << 12);
      *data |= ((port_down_[173] & 0x1) << 13);
      *data |= ((port_down_[174] & 0x1) << 14);
      *data |= ((port_down_[175] & 0x1) << 15);
      *data |= ((port_down_[176] & 0x1) << 16);
      *data |= ((port_down_[177] & 0x1) << 17);
      *data |= ((port_down_[178] & 0x1) << 18);
      *data |= ((port_down_[179] & 0x1) << 19);
      *data |= ((port_down_[180] & 0x1) << 20);
      *data |= ((port_down_[181] & 0x1) << 21);
      *data |= ((port_down_[182] & 0x1) << 22);
      *data |= ((port_down_[183] & 0x1) << 23);
      *data |= ((port_down_[184] & 0x1) << 24);
      *data |= ((port_down_[185] & 0x1) << 25);
      *data |= ((port_down_[186] & 0x1) << 26);
      *data |= ((port_down_[187] & 0x1) << 27);
      *data |= ((port_down_[188] & 0x1) << 28);
      *data |= ((port_down_[189] & 0x1) << 29);
      *data |= ((port_down_[190] & 0x1) << 30);
      *data |= ((port_down_[191] & 0x1) << 31);
    }
    else if (offset >= 0x18 && offset < 0x1c) {
      if (read_callback_) read_callback_();
      *data = (port_down_[192] & 0x1);
      *data |= ((port_down_[193] & 0x1) << 1);
      *data |= ((port_down_[194] & 0x1) << 2);
      *data |= ((port_down_[195] & 0x1) << 3);
      *data |= ((port_down_[196] & 0x1) << 4);
      *data |= ((port_down_[197] & 0x1) << 5);
      *data |= ((port_down_[198] & 0x1) << 6);
      *data |= ((port_down_[199] & 0x1) << 7);
      *data |= ((port_down_[200] & 0x1) << 8);
      *data |= ((port_down_[201] & 0x1) << 9);
      *data |= ((port_down_[202] & 0x1) << 10);
      *data |= ((port_down_[203] & 0x1) << 11);
      *data |= ((port_down_[204] & 0x1) << 12);
      *data |= ((port_down_[205] & 0x1) << 13);
      *data |= ((port_down_[206] & 0x1) << 14);
      *data |= ((port_down_[207] & 0x1) << 15);
      *data |= ((port_down_[208] & 0x1) << 16);
      *data |= ((port_down_[209] & 0x1) << 17);
      *data |= ((port_down_[210] & 0x1) << 18);
      *data |= ((port_down_[211] & 0x1) << 19);
      *data |= ((port_down_[212] & 0x1) << 20);
      *data |= ((port_down_[213] & 0x1) << 21);
      *data |= ((port_down_[214] & 0x1) << 22);
      *data |= ((port_down_[215] & 0x1) << 23);
      *data |= ((port_down_[216] & 0x1) << 24);
      *data |= ((port_down_[217] & 0x1) << 25);
      *data |= ((port_down_[218] & 0x1) << 26);
      *data |= ((port_down_[219] & 0x1) << 27);
      *data |= ((port_down_[220] & 0x1) << 28);
      *data |= ((port_down_[221] & 0x1) << 29);
      *data |= ((port_down_[222] & 0x1) << 30);
      *data |= ((port_down_[223] & 0x1) << 31);
    }
    else if (offset >= 0x1c && offset < 0x20) {
      if (read_callback_) read_callback_();
      *data = (port_down_[224] & 0x1);
      *data |= ((port_down_[225] & 0x1) << 1);
      *data |= ((port_down_[226] & 0x1) << 2);
      *data |= ((port_down_[227] & 0x1) << 3);
      *data |= ((port_down_[228] & 0x1) << 4);
      *data |= ((port_down_[229] & 0x1) << 5);
      *data |= ((port_down_[230] & 0x1) << 6);
      *data |= ((port_down_[231] & 0x1) << 7);
      *data |= ((port_down_[232] & 0x1) << 8);
      *data |= ((port_down_[233] & 0x1) << 9);
      *data |= ((port_down_[234] & 0x1) << 10);
      *data |= ((port_down_[235] & 0x1) << 11);
      *data |= ((port_down_[236] & 0x1) << 12);
      *data |= ((port_down_[237] & 0x1) << 13);
      *data |= ((port_down_[238] & 0x1) << 14);
      *data |= ((port_down_[239] & 0x1) << 15);
      *data |= ((port_down_[240] & 0x1) << 16);
      *data |= ((port_down_[241] & 0x1) << 17);
      *data |= ((port_down_[242] & 0x1) << 18);
      *data |= ((port_down_[243] & 0x1) << 19);
      *data |= ((port_down_[244] & 0x1) << 20);
      *data |= ((port_down_[245] & 0x1) << 21);
      *data |= ((port_down_[246] & 0x1) << 22);
      *data |= ((port_down_[247] & 0x1) << 23);
      *data |= ((port_down_[248] & 0x1) << 24);
      *data |= ((port_down_[249] & 0x1) << 25);
      *data |= ((port_down_[250] & 0x1) << 26);
      *data |= ((port_down_[251] & 0x1) << 27);
      *data |= ((port_down_[252] & 0x1) << 28);
      *data |= ((port_down_[253] & 0x1) << 29);
      *data |= ((port_down_[254] & 0x1) << 30);
      *data |= ((port_down_[255] & 0x1) << 31);
    }
    else if (offset >= 0x20 && offset < 0x24) {
      if (read_callback_) read_callback_();
      *data = (port_down_[256] & 0x1);
      *data |= ((port_down_[257] & 0x1) << 1);
      *data |= ((port_down_[258] & 0x1) << 2);
      *data |= ((port_down_[259] & 0x1) << 3);
      *data |= ((port_down_[260] & 0x1) << 4);
      *data |= ((port_down_[261] & 0x1) << 5);
      *data |= ((port_down_[262] & 0x1) << 6);
      *data |= ((port_down_[263] & 0x1) << 7);
      *data |= ((port_down_[264] & 0x1) << 8);
      *data |= ((port_down_[265] & 0x1) << 9);
      *data |= ((port_down_[266] & 0x1) << 10);
      *data |= ((port_down_[267] & 0x1) << 11);
      *data |= ((port_down_[268] & 0x1) << 12);
      *data |= ((port_down_[269] & 0x1) << 13);
      *data |= ((port_down_[270] & 0x1) << 14);
      *data |= ((port_down_[271] & 0x1) << 15);
      *data |= ((port_down_[272] & 0x1) << 16);
      *data |= ((port_down_[273] & 0x1) << 17);
      *data |= ((port_down_[274] & 0x1) << 18);
      *data |= ((port_down_[275] & 0x1) << 19);
      *data |= ((port_down_[276] & 0x1) << 20);
      *data |= ((port_down_[277] & 0x1) << 21);
      *data |= ((port_down_[278] & 0x1) << 22);
      *data |= ((port_down_[279] & 0x1) << 23);
      *data |= ((port_down_[280] & 0x1) << 24);
      *data |= ((port_down_[281] & 0x1) << 25);
      *data |= ((port_down_[282] & 0x1) << 26);
      *data |= ((port_down_[283] & 0x1) << 27);
      *data |= ((port_down_[284] & 0x1) << 28);
      *data |= ((port_down_[285] & 0x1) << 29);
      *data |= ((port_down_[286] & 0x1) << 30);
      *data |= ((port_down_[287] & 0x1) << 31);
    }
    else {
      assert(0);
    }
    return true;
  }


  bool write(
      uint32_t offset, uint32_t data
      ) {
    if (offset < 0x4) {
      port_down_[0] &= ~(data & 0x1);
      port_down_[1] &= ~((data >> 1) & 0x1);
      port_down_[2] &= ~((data >> 2) & 0x1);
      port_down_[3] &= ~((data >> 3) & 0x1);
      port_down_[4] &= ~((data >> 4) & 0x1);
      port_down_[5] &= ~((data >> 5) & 0x1);
      port_down_[6] &= ~((data >> 6) & 0x1);
      port_down_[7] &= ~((data >> 7) & 0x1);
      port_down_[8] &= ~((data >> 8) & 0x1);
      port_down_[9] &= ~((data >> 9) & 0x1);
      port_down_[10] &= ~((data >> 10) & 0x1);
      port_down_[11] &= ~((data >> 11) & 0x1);
      port_down_[12] &= ~((data >> 12) & 0x1);
      port_down_[13] &= ~((data >> 13) & 0x1);
      port_down_[14] &= ~((data >> 14) & 0x1);
      port_down_[15] &= ~((data >> 15) & 0x1);
      port_down_[16] &= ~((data >> 16) & 0x1);
      port_down_[17] &= ~((data >> 17) & 0x1);
      port_down_[18] &= ~((data >> 18) & 0x1);
      port_down_[19] &= ~((data >> 19) & 0x1);
      port_down_[20] &= ~((data >> 20) & 0x1);
      port_down_[21] &= ~((data >> 21) & 0x1);
      port_down_[22] &= ~((data >> 22) & 0x1);
      port_down_[23] &= ~((data >> 23) & 0x1);
      port_down_[24] &= ~((data >> 24) & 0x1);
      port_down_[25] &= ~((data >> 25) & 0x1);
      port_down_[26] &= ~((data >> 26) & 0x1);
      port_down_[27] &= ~((data >> 27) & 0x1);
      port_down_[28] &= ~((data >> 28) & 0x1);
      port_down_[29] &= ~((data >> 29) & 0x1);
      port_down_[30] &= ~((data >> 30) & 0x1);
      port_down_[31] &= ~((data >> 31) & 0x1);
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x4 && offset < 0x8) {
      port_down_[32] &= ~(data & 0x1);
      port_down_[33] &= ~((data >> 1) & 0x1);
      port_down_[34] &= ~((data >> 2) & 0x1);
      port_down_[35] &= ~((data >> 3) & 0x1);
      port_down_[36] &= ~((data >> 4) & 0x1);
      port_down_[37] &= ~((data >> 5) & 0x1);
      port_down_[38] &= ~((data >> 6) & 0x1);
      port_down_[39] &= ~((data >> 7) & 0x1);
      port_down_[40] &= ~((data >> 8) & 0x1);
      port_down_[41] &= ~((data >> 9) & 0x1);
      port_down_[42] &= ~((data >> 10) & 0x1);
      port_down_[43] &= ~((data >> 11) & 0x1);
      port_down_[44] &= ~((data >> 12) & 0x1);
      port_down_[45] &= ~((data >> 13) & 0x1);
      port_down_[46] &= ~((data >> 14) & 0x1);
      port_down_[47] &= ~((data >> 15) & 0x1);
      port_down_[48] &= ~((data >> 16) & 0x1);
      port_down_[49] &= ~((data >> 17) & 0x1);
      port_down_[50] &= ~((data >> 18) & 0x1);
      port_down_[51] &= ~((data >> 19) & 0x1);
      port_down_[52] &= ~((data >> 20) & 0x1);
      port_down_[53] &= ~((data >> 21) & 0x1);
      port_down_[54] &= ~((data >> 22) & 0x1);
      port_down_[55] &= ~((data >> 23) & 0x1);
      port_down_[56] &= ~((data >> 24) & 0x1);
      port_down_[57] &= ~((data >> 25) & 0x1);
      port_down_[58] &= ~((data >> 26) & 0x1);
      port_down_[59] &= ~((data >> 27) & 0x1);
      port_down_[60] &= ~((data >> 28) & 0x1);
      port_down_[61] &= ~((data >> 29) & 0x1);
      port_down_[62] &= ~((data >> 30) & 0x1);
      port_down_[63] &= ~((data >> 31) & 0x1);
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x8 && offset < 0xc) {
      port_down_[64] &= ~(data & 0x1);
      port_down_[65] &= ~((data >> 1) & 0x1);
      port_down_[66] &= ~((data >> 2) & 0x1);
      port_down_[67] &= ~((data >> 3) & 0x1);
      port_down_[68] &= ~((data >> 4) & 0x1);
      port_down_[69] &= ~((data >> 5) & 0x1);
      port_down_[70] &= ~((data >> 6) & 0x1);
      port_down_[71] &= ~((data >> 7) & 0x1);
      port_down_[72] &= ~((data >> 8) & 0x1);
      port_down_[73] &= ~((data >> 9) & 0x1);
      port_down_[74] &= ~((data >> 10) & 0x1);
      port_down_[75] &= ~((data >> 11) & 0x1);
      port_down_[76] &= ~((data >> 12) & 0x1);
      port_down_[77] &= ~((data >> 13) & 0x1);
      port_down_[78] &= ~((data >> 14) & 0x1);
      port_down_[79] &= ~((data >> 15) & 0x1);
      port_down_[80] &= ~((data >> 16) & 0x1);
      port_down_[81] &= ~((data >> 17) & 0x1);
      port_down_[82] &= ~((data >> 18) & 0x1);
      port_down_[83] &= ~((data >> 19) & 0x1);
      port_down_[84] &= ~((data >> 20) & 0x1);
      port_down_[85] &= ~((data >> 21) & 0x1);
      port_down_[86] &= ~((data >> 22) & 0x1);
      port_down_[87] &= ~((data >> 23) & 0x1);
      port_down_[88] &= ~((data >> 24) & 0x1);
      port_down_[89] &= ~((data >> 25) & 0x1);
      port_down_[90] &= ~((data >> 26) & 0x1);
      port_down_[91] &= ~((data >> 27) & 0x1);
      port_down_[92] &= ~((data >> 28) & 0x1);
      port_down_[93] &= ~((data >> 29) & 0x1);
      port_down_[94] &= ~((data >> 30) & 0x1);
      port_down_[95] &= ~((data >> 31) & 0x1);
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0xc && offset < 0x10) {
      port_down_[96] &= ~(data & 0x1);
      port_down_[97] &= ~((data >> 1) & 0x1);
      port_down_[98] &= ~((data >> 2) & 0x1);
      port_down_[99] &= ~((data >> 3) & 0x1);
      port_down_[100] &= ~((data >> 4) & 0x1);
      port_down_[101] &= ~((data >> 5) & 0x1);
      port_down_[102] &= ~((data >> 6) & 0x1);
      port_down_[103] &= ~((data >> 7) & 0x1);
      port_down_[104] &= ~((data >> 8) & 0x1);
      port_down_[105] &= ~((data >> 9) & 0x1);
      port_down_[106] &= ~((data >> 10) & 0x1);
      port_down_[107] &= ~((data >> 11) & 0x1);
      port_down_[108] &= ~((data >> 12) & 0x1);
      port_down_[109] &= ~((data >> 13) & 0x1);
      port_down_[110] &= ~((data >> 14) & 0x1);
      port_down_[111] &= ~((data >> 15) & 0x1);
      port_down_[112] &= ~((data >> 16) & 0x1);
      port_down_[113] &= ~((data >> 17) & 0x1);
      port_down_[114] &= ~((data >> 18) & 0x1);
      port_down_[115] &= ~((data >> 19) & 0x1);
      port_down_[116] &= ~((data >> 20) & 0x1);
      port_down_[117] &= ~((data >> 21) & 0x1);
      port_down_[118] &= ~((data >> 22) & 0x1);
      port_down_[119] &= ~((data >> 23) & 0x1);
      port_down_[120] &= ~((data >> 24) & 0x1);
      port_down_[121] &= ~((data >> 25) & 0x1);
      port_down_[122] &= ~((data >> 26) & 0x1);
      port_down_[123] &= ~((data >> 27) & 0x1);
      port_down_[124] &= ~((data >> 28) & 0x1);
      port_down_[125] &= ~((data >> 29) & 0x1);
      port_down_[126] &= ~((data >> 30) & 0x1);
      port_down_[127] &= ~((data >> 31) & 0x1);
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x10 && offset < 0x14) {
      port_down_[128] &= ~(data & 0x1);
      port_down_[129] &= ~((data >> 1) & 0x1);
      port_down_[130] &= ~((data >> 2) & 0x1);
      port_down_[131] &= ~((data >> 3) & 0x1);
      port_down_[132] &= ~((data >> 4) & 0x1);
      port_down_[133] &= ~((data >> 5) & 0x1);
      port_down_[134] &= ~((data >> 6) & 0x1);
      port_down_[135] &= ~((data >> 7) & 0x1);
      port_down_[136] &= ~((data >> 8) & 0x1);
      port_down_[137] &= ~((data >> 9) & 0x1);
      port_down_[138] &= ~((data >> 10) & 0x1);
      port_down_[139] &= ~((data >> 11) & 0x1);
      port_down_[140] &= ~((data >> 12) & 0x1);
      port_down_[141] &= ~((data >> 13) & 0x1);
      port_down_[142] &= ~((data >> 14) & 0x1);
      port_down_[143] &= ~((data >> 15) & 0x1);
      port_down_[144] &= ~((data >> 16) & 0x1);
      port_down_[145] &= ~((data >> 17) & 0x1);
      port_down_[146] &= ~((data >> 18) & 0x1);
      port_down_[147] &= ~((data >> 19) & 0x1);
      port_down_[148] &= ~((data >> 20) & 0x1);
      port_down_[149] &= ~((data >> 21) & 0x1);
      port_down_[150] &= ~((data >> 22) & 0x1);
      port_down_[151] &= ~((data >> 23) & 0x1);
      port_down_[152] &= ~((data >> 24) & 0x1);
      port_down_[153] &= ~((data >> 25) & 0x1);
      port_down_[154] &= ~((data >> 26) & 0x1);
      port_down_[155] &= ~((data >> 27) & 0x1);
      port_down_[156] &= ~((data >> 28) & 0x1);
      port_down_[157] &= ~((data >> 29) & 0x1);
      port_down_[158] &= ~((data >> 30) & 0x1);
      port_down_[159] &= ~((data >> 31) & 0x1);
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x14 && offset < 0x18) {
      port_down_[160] &= ~(data & 0x1);
      port_down_[161] &= ~((data >> 1) & 0x1);
      port_down_[162] &= ~((data >> 2) & 0x1);
      port_down_[163] &= ~((data >> 3) & 0x1);
      port_down_[164] &= ~((data >> 4) & 0x1);
      port_down_[165] &= ~((data >> 5) & 0x1);
      port_down_[166] &= ~((data >> 6) & 0x1);
      port_down_[167] &= ~((data >> 7) & 0x1);
      port_down_[168] &= ~((data >> 8) & 0x1);
      port_down_[169] &= ~((data >> 9) & 0x1);
      port_down_[170] &= ~((data >> 10) & 0x1);
      port_down_[171] &= ~((data >> 11) & 0x1);
      port_down_[172] &= ~((data >> 12) & 0x1);
      port_down_[173] &= ~((data >> 13) & 0x1);
      port_down_[174] &= ~((data >> 14) & 0x1);
      port_down_[175] &= ~((data >> 15) & 0x1);
      port_down_[176] &= ~((data >> 16) & 0x1);
      port_down_[177] &= ~((data >> 17) & 0x1);
      port_down_[178] &= ~((data >> 18) & 0x1);
      port_down_[179] &= ~((data >> 19) & 0x1);
      port_down_[180] &= ~((data >> 20) & 0x1);
      port_down_[181] &= ~((data >> 21) & 0x1);
      port_down_[182] &= ~((data >> 22) & 0x1);
      port_down_[183] &= ~((data >> 23) & 0x1);
      port_down_[184] &= ~((data >> 24) & 0x1);
      port_down_[185] &= ~((data >> 25) & 0x1);
      port_down_[186] &= ~((data >> 26) & 0x1);
      port_down_[187] &= ~((data >> 27) & 0x1);
      port_down_[188] &= ~((data >> 28) & 0x1);
      port_down_[189] &= ~((data >> 29) & 0x1);
      port_down_[190] &= ~((data >> 30) & 0x1);
      port_down_[191] &= ~((data >> 31) & 0x1);
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x18 && offset < 0x1c) {
      port_down_[192] &= ~(data & 0x1);
      port_down_[193] &= ~((data >> 1) & 0x1);
      port_down_[194] &= ~((data >> 2) & 0x1);
      port_down_[195] &= ~((data >> 3) & 0x1);
      port_down_[196] &= ~((data >> 4) & 0x1);
      port_down_[197] &= ~((data >> 5) & 0x1);
      port_down_[198] &= ~((data >> 6) & 0x1);
      port_down_[199] &= ~((data >> 7) & 0x1);
      port_down_[200] &= ~((data >> 8) & 0x1);
      port_down_[201] &= ~((data >> 9) & 0x1);
      port_down_[202] &= ~((data >> 10) & 0x1);
      port_down_[203] &= ~((data >> 11) & 0x1);
      port_down_[204] &= ~((data >> 12) & 0x1);
      port_down_[205] &= ~((data >> 13) & 0x1);
      port_down_[206] &= ~((data >> 14) & 0x1);
      port_down_[207] &= ~((data >> 15) & 0x1);
      port_down_[208] &= ~((data >> 16) & 0x1);
      port_down_[209] &= ~((data >> 17) & 0x1);
      port_down_[210] &= ~((data >> 18) & 0x1);
      port_down_[211] &= ~((data >> 19) & 0x1);
      port_down_[212] &= ~((data >> 20) & 0x1);
      port_down_[213] &= ~((data >> 21) & 0x1);
      port_down_[214] &= ~((data >> 22) & 0x1);
      port_down_[215] &= ~((data >> 23) & 0x1);
      port_down_[216] &= ~((data >> 24) & 0x1);
      port_down_[217] &= ~((data >> 25) & 0x1);
      port_down_[218] &= ~((data >> 26) & 0x1);
      port_down_[219] &= ~((data >> 27) & 0x1);
      port_down_[220] &= ~((data >> 28) & 0x1);
      port_down_[221] &= ~((data >> 29) & 0x1);
      port_down_[222] &= ~((data >> 30) & 0x1);
      port_down_[223] &= ~((data >> 31) & 0x1);
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x1c && offset < 0x20) {
      port_down_[224] &= ~(data & 0x1);
      port_down_[225] &= ~((data >> 1) & 0x1);
      port_down_[226] &= ~((data >> 2) & 0x1);
      port_down_[227] &= ~((data >> 3) & 0x1);
      port_down_[228] &= ~((data >> 4) & 0x1);
      port_down_[229] &= ~((data >> 5) & 0x1);
      port_down_[230] &= ~((data >> 6) & 0x1);
      port_down_[231] &= ~((data >> 7) & 0x1);
      port_down_[232] &= ~((data >> 8) & 0x1);
      port_down_[233] &= ~((data >> 9) & 0x1);
      port_down_[234] &= ~((data >> 10) & 0x1);
      port_down_[235] &= ~((data >> 11) & 0x1);
      port_down_[236] &= ~((data >> 12) & 0x1);
      port_down_[237] &= ~((data >> 13) & 0x1);
      port_down_[238] &= ~((data >> 14) & 0x1);
      port_down_[239] &= ~((data >> 15) & 0x1);
      port_down_[240] &= ~((data >> 16) & 0x1);
      port_down_[241] &= ~((data >> 17) & 0x1);
      port_down_[242] &= ~((data >> 18) & 0x1);
      port_down_[243] &= ~((data >> 19) & 0x1);
      port_down_[244] &= ~((data >> 20) & 0x1);
      port_down_[245] &= ~((data >> 21) & 0x1);
      port_down_[246] &= ~((data >> 22) & 0x1);
      port_down_[247] &= ~((data >> 23) & 0x1);
      port_down_[248] &= ~((data >> 24) & 0x1);
      port_down_[249] &= ~((data >> 25) & 0x1);
      port_down_[250] &= ~((data >> 26) & 0x1);
      port_down_[251] &= ~((data >> 27) & 0x1);
      port_down_[252] &= ~((data >> 28) & 0x1);
      port_down_[253] &= ~((data >> 29) & 0x1);
      port_down_[254] &= ~((data >> 30) & 0x1);
      port_down_[255] &= ~((data >> 31) & 0x1);
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x20 && offset < 0x24) {
      port_down_[256] &= ~(data & 0x1);
      port_down_[257] &= ~((data >> 1) & 0x1);
      port_down_[258] &= ~((data >> 2) & 0x1);
      port_down_[259] &= ~((data >> 3) & 0x1);
      port_down_[260] &= ~((data >> 4) & 0x1);
      port_down_[261] &= ~((data >> 5) & 0x1);
      port_down_[262] &= ~((data >> 6) & 0x1);
      port_down_[263] &= ~((data >> 7) & 0x1);
      port_down_[264] &= ~((data >> 8) & 0x1);
      port_down_[265] &= ~((data >> 9) & 0x1);
      port_down_[266] &= ~((data >> 10) & 0x1);
      port_down_[267] &= ~((data >> 11) & 0x1);
      port_down_[268] &= ~((data >> 12) & 0x1);
      port_down_[269] &= ~((data >> 13) & 0x1);
      port_down_[270] &= ~((data >> 14) & 0x1);
      port_down_[271] &= ~((data >> 15) & 0x1);
      port_down_[272] &= ~((data >> 16) & 0x1);
      port_down_[273] &= ~((data >> 17) & 0x1);
      port_down_[274] &= ~((data >> 18) & 0x1);
      port_down_[275] &= ~((data >> 19) & 0x1);
      port_down_[276] &= ~((data >> 20) & 0x1);
      port_down_[277] &= ~((data >> 21) & 0x1);
      port_down_[278] &= ~((data >> 22) & 0x1);
      port_down_[279] &= ~((data >> 23) & 0x1);
      port_down_[280] &= ~((data >> 24) & 0x1);
      port_down_[281] &= ~((data >> 25) & 0x1);
      port_down_[282] &= ~((data >> 26) & 0x1);
      port_down_[283] &= ~((data >> 27) & 0x1);
      port_down_[284] &= ~((data >> 28) & 0x1);
      port_down_[285] &= ~((data >> 29) & 0x1);
      port_down_[286] &= ~((data >> 30) & 0x1);
      port_down_[287] &= ~((data >> 31) & 0x1);
      if (write_callback_) write_callback_();
    }
    else {
      assert(0);
    }
    return true;
  }

  void reset(
      
      ) {
    port_down_[0] = 0x1;
    port_down_[1] = 0x1;
    port_down_[2] = 0x1;
    port_down_[3] = 0x1;
    port_down_[4] = 0x1;
    port_down_[5] = 0x1;
    port_down_[6] = 0x1;
    port_down_[7] = 0x1;
    port_down_[8] = 0x1;
    port_down_[9] = 0x1;
    port_down_[10] = 0x1;
    port_down_[11] = 0x1;
    port_down_[12] = 0x1;
    port_down_[13] = 0x1;
    port_down_[14] = 0x1;
    port_down_[15] = 0x1;
    port_down_[16] = 0x1;
    port_down_[17] = 0x1;
    port_down_[18] = 0x1;
    port_down_[19] = 0x1;
    port_down_[20] = 0x1;
    port_down_[21] = 0x1;
    port_down_[22] = 0x1;
    port_down_[23] = 0x1;
    port_down_[24] = 0x1;
    port_down_[25] = 0x1;
    port_down_[26] = 0x1;
    port_down_[27] = 0x1;
    port_down_[28] = 0x1;
    port_down_[29] = 0x1;
    port_down_[30] = 0x1;
    port_down_[31] = 0x1;
    port_down_[32] = 0x1;
    port_down_[33] = 0x1;
    port_down_[34] = 0x1;
    port_down_[35] = 0x1;
    port_down_[36] = 0x1;
    port_down_[37] = 0x1;
    port_down_[38] = 0x1;
    port_down_[39] = 0x1;
    port_down_[40] = 0x1;
    port_down_[41] = 0x1;
    port_down_[42] = 0x1;
    port_down_[43] = 0x1;
    port_down_[44] = 0x1;
    port_down_[45] = 0x1;
    port_down_[46] = 0x1;
    port_down_[47] = 0x1;
    port_down_[48] = 0x1;
    port_down_[49] = 0x1;
    port_down_[50] = 0x1;
    port_down_[51] = 0x1;
    port_down_[52] = 0x1;
    port_down_[53] = 0x1;
    port_down_[54] = 0x1;
    port_down_[55] = 0x1;
    port_down_[56] = 0x1;
    port_down_[57] = 0x1;
    port_down_[58] = 0x1;
    port_down_[59] = 0x1;
    port_down_[60] = 0x1;
    port_down_[61] = 0x1;
    port_down_[62] = 0x1;
    port_down_[63] = 0x1;
    port_down_[64] = 0x1;
    port_down_[65] = 0x1;
    port_down_[66] = 0x1;
    port_down_[67] = 0x1;
    port_down_[68] = 0x1;
    port_down_[69] = 0x1;
    port_down_[70] = 0x1;
    port_down_[71] = 0x1;
    port_down_[72] = 0x1;
    port_down_[73] = 0x1;
    port_down_[74] = 0x1;
    port_down_[75] = 0x1;
    port_down_[76] = 0x1;
    port_down_[77] = 0x1;
    port_down_[78] = 0x1;
    port_down_[79] = 0x1;
    port_down_[80] = 0x1;
    port_down_[81] = 0x1;
    port_down_[82] = 0x1;
    port_down_[83] = 0x1;
    port_down_[84] = 0x1;
    port_down_[85] = 0x1;
    port_down_[86] = 0x1;
    port_down_[87] = 0x1;
    port_down_[88] = 0x1;
    port_down_[89] = 0x1;
    port_down_[90] = 0x1;
    port_down_[91] = 0x1;
    port_down_[92] = 0x1;
    port_down_[93] = 0x1;
    port_down_[94] = 0x1;
    port_down_[95] = 0x1;
    port_down_[96] = 0x1;
    port_down_[97] = 0x1;
    port_down_[98] = 0x1;
    port_down_[99] = 0x1;
    port_down_[100] = 0x1;
    port_down_[101] = 0x1;
    port_down_[102] = 0x1;
    port_down_[103] = 0x1;
    port_down_[104] = 0x1;
    port_down_[105] = 0x1;
    port_down_[106] = 0x1;
    port_down_[107] = 0x1;
    port_down_[108] = 0x1;
    port_down_[109] = 0x1;
    port_down_[110] = 0x1;
    port_down_[111] = 0x1;
    port_down_[112] = 0x1;
    port_down_[113] = 0x1;
    port_down_[114] = 0x1;
    port_down_[115] = 0x1;
    port_down_[116] = 0x1;
    port_down_[117] = 0x1;
    port_down_[118] = 0x1;
    port_down_[119] = 0x1;
    port_down_[120] = 0x1;
    port_down_[121] = 0x1;
    port_down_[122] = 0x1;
    port_down_[123] = 0x1;
    port_down_[124] = 0x1;
    port_down_[125] = 0x1;
    port_down_[126] = 0x1;
    port_down_[127] = 0x1;
    port_down_[128] = 0x1;
    port_down_[129] = 0x1;
    port_down_[130] = 0x1;
    port_down_[131] = 0x1;
    port_down_[132] = 0x1;
    port_down_[133] = 0x1;
    port_down_[134] = 0x1;
    port_down_[135] = 0x1;
    port_down_[136] = 0x1;
    port_down_[137] = 0x1;
    port_down_[138] = 0x1;
    port_down_[139] = 0x1;
    port_down_[140] = 0x1;
    port_down_[141] = 0x1;
    port_down_[142] = 0x1;
    port_down_[143] = 0x1;
    port_down_[144] = 0x1;
    port_down_[145] = 0x1;
    port_down_[146] = 0x1;
    port_down_[147] = 0x1;
    port_down_[148] = 0x1;
    port_down_[149] = 0x1;
    port_down_[150] = 0x1;
    port_down_[151] = 0x1;
    port_down_[152] = 0x1;
    port_down_[153] = 0x1;
    port_down_[154] = 0x1;
    port_down_[155] = 0x1;
    port_down_[156] = 0x1;
    port_down_[157] = 0x1;
    port_down_[158] = 0x1;
    port_down_[159] = 0x1;
    port_down_[160] = 0x1;
    port_down_[161] = 0x1;
    port_down_[162] = 0x1;
    port_down_[163] = 0x1;
    port_down_[164] = 0x1;
    port_down_[165] = 0x1;
    port_down_[166] = 0x1;
    port_down_[167] = 0x1;
    port_down_[168] = 0x1;
    port_down_[169] = 0x1;
    port_down_[170] = 0x1;
    port_down_[171] = 0x1;
    port_down_[172] = 0x1;
    port_down_[173] = 0x1;
    port_down_[174] = 0x1;
    port_down_[175] = 0x1;
    port_down_[176] = 0x1;
    port_down_[177] = 0x1;
    port_down_[178] = 0x1;
    port_down_[179] = 0x1;
    port_down_[180] = 0x1;
    port_down_[181] = 0x1;
    port_down_[182] = 0x1;
    port_down_[183] = 0x1;
    port_down_[184] = 0x1;
    port_down_[185] = 0x1;
    port_down_[186] = 0x1;
    port_down_[187] = 0x1;
    port_down_[188] = 0x1;
    port_down_[189] = 0x1;
    port_down_[190] = 0x1;
    port_down_[191] = 0x1;
    port_down_[192] = 0x1;
    port_down_[193] = 0x1;
    port_down_[194] = 0x1;
    port_down_[195] = 0x1;
    port_down_[196] = 0x1;
    port_down_[197] = 0x1;
    port_down_[198] = 0x1;
    port_down_[199] = 0x1;
    port_down_[200] = 0x1;
    port_down_[201] = 0x1;
    port_down_[202] = 0x1;
    port_down_[203] = 0x1;
    port_down_[204] = 0x1;
    port_down_[205] = 0x1;
    port_down_[206] = 0x1;
    port_down_[207] = 0x1;
    port_down_[208] = 0x1;
    port_down_[209] = 0x1;
    port_down_[210] = 0x1;
    port_down_[211] = 0x1;
    port_down_[212] = 0x1;
    port_down_[213] = 0x1;
    port_down_[214] = 0x1;
    port_down_[215] = 0x1;
    port_down_[216] = 0x1;
    port_down_[217] = 0x1;
    port_down_[218] = 0x1;
    port_down_[219] = 0x1;
    port_down_[220] = 0x1;
    port_down_[221] = 0x1;
    port_down_[222] = 0x1;
    port_down_[223] = 0x1;
    port_down_[224] = 0x1;
    port_down_[225] = 0x1;
    port_down_[226] = 0x1;
    port_down_[227] = 0x1;
    port_down_[228] = 0x1;
    port_down_[229] = 0x1;
    port_down_[230] = 0x1;
    port_down_[231] = 0x1;
    port_down_[232] = 0x1;
    port_down_[233] = 0x1;
    port_down_[234] = 0x1;
    port_down_[235] = 0x1;
    port_down_[236] = 0x1;
    port_down_[237] = 0x1;
    port_down_[238] = 0x1;
    port_down_[239] = 0x1;
    port_down_[240] = 0x1;
    port_down_[241] = 0x1;
    port_down_[242] = 0x1;
    port_down_[243] = 0x1;
    port_down_[244] = 0x1;
    port_down_[245] = 0x1;
    port_down_[246] = 0x1;
    port_down_[247] = 0x1;
    port_down_[248] = 0x1;
    port_down_[249] = 0x1;
    port_down_[250] = 0x1;
    port_down_[251] = 0x1;
    port_down_[252] = 0x1;
    port_down_[253] = 0x1;
    port_down_[254] = 0x1;
    port_down_[255] = 0x1;
    port_down_[256] = 0x1;
    port_down_[257] = 0x1;
    port_down_[258] = 0x1;
    port_down_[259] = 0x1;
    port_down_[260] = 0x1;
    port_down_[261] = 0x1;
    port_down_[262] = 0x1;
    port_down_[263] = 0x1;
    port_down_[264] = 0x1;
    port_down_[265] = 0x1;
    port_down_[266] = 0x1;
    port_down_[267] = 0x1;
    port_down_[268] = 0x1;
    port_down_[269] = 0x1;
    port_down_[270] = 0x1;
    port_down_[271] = 0x1;
    port_down_[272] = 0x1;
    port_down_[273] = 0x1;
    port_down_[274] = 0x1;
    port_down_[275] = 0x1;
    port_down_[276] = 0x1;
    port_down_[277] = 0x1;
    port_down_[278] = 0x1;
    port_down_[279] = 0x1;
    port_down_[280] = 0x1;
    port_down_[281] = 0x1;
    port_down_[282] = 0x1;
    port_down_[283] = 0x1;
    port_down_[284] = 0x1;
    port_down_[285] = 0x1;
    port_down_[286] = 0x1;
    port_down_[287] = 0x1;
    if (write_callback_) write_callback_();
  }

  std::string to_string(
      uint32_t offset, bool print_zeros = false, std::string indent_string = ""
      ) const {
    std::string r("");
    bool all_zeros=true;
    r += indent_string + std::string("PrePortDown") + ":\n";
    for (uint32_t f=0;f<288;++f) {
      r += indent_string + "  " + std::string("port_down") + "["+boost::lexical_cast<std::string>(f)+"]"+ ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(port_down_[f]) ) + "\n";
      all_zeros &= (0 == port_down_[f]);
    }
    if (all_zeros && !print_zeros) {
      return("");
    }
    else {
      return r;
    }
  }

  std::string to_string(
      bool print_zeros = false, std::string indent_string = ""
      ) const {
    std::string r("");
    bool all_zeros=true;
    r += indent_string + std::string("PrePortDown") + ":\n";
    for (uint32_t f=0;f<288;++f) {
      r += indent_string + "  " + std::string("port_down") + "["+boost::lexical_cast<std::string>(f)+"]"+ ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(port_down_[f]) ) + "\n";
      all_zeros &= (0 == port_down_[f]);
    }
    if (all_zeros && !print_zeros) {
      return("");
    }
    else {
      return r;
    }
  }

private:
  std::array< uint8_t, 288 > port_down_;
private:
  static int StartOffset(
      
      ) {
    int offset=0;
    offset += 0x800000; // to get to tm_top
    offset += 0x480000; // to get to tm_pre_top
    offset += 0x20000; // to get to pre_common
    offset += 0x100; // to get to port_down
    return offset;
  }

};









  }; // namespace register_classes
}; // namespace jbayB0

#endif // __REGISTER_INCLUDES_PRE_PORT_DOWN_H__
