/*******************************************************************************
 *  Copyright (C) 2024 Intel Corporation
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions
 *  and limitations under the License.
 *
 *
 *  SPDX-License-Identifier: Apache-2.0
 ******************************************************************************/

// generated by split_classes.pl
#ifndef __REGISTER_INCLUDES_TM_SCH_PIPE_RSPEC_ECC_H__
#define __REGISTER_INCLUDES_TM_SCH_PIPE_RSPEC_ECC_H__


#include <cstdint>
#include <cassert>
#include <array>
#include <vector>
#include <string>
#include <boost/lexical_cast.hpp>
#include <boost/format.hpp>
#include <model_core/register_block.h>
#include <shared/bitvector.h>












namespace tofino {
  namespace register_classes {

class TmSchPipeRspecEcc : public model_core::RegisterBlock<RegisterCallback> {
public:
  TmSchPipeRspecEcc(
      int chipNumber, int index_tm_sch_pipe_rspec, RegisterCallback& write_callback = 0, RegisterCallback& read_callback = 0
  )
    : RegisterBlock(chipNumber, StartOffset(index_tm_sch_pipe_rspec), 12, false, write_callback, read_callback, std::string("TmSchPipeRspecEcc")+":"+boost::lexical_cast<std::string>(index_tm_sch_pipe_rspec))
    {
    }
  TmSchPipeRspecEcc(
      
  )
    : RegisterBlock(0, 0, 0, false, 0, 0, "TmSchPipeRspecEcc")
    {
    }
public:




  uint8_t &tdm_table_disable_check() { return tdm_table_disable_check_; }




  uint8_t &tdm_table_inject_sbe() { return tdm_table_inject_sbe_; }




  uint8_t &tdm_table_inject_mbe() { return tdm_table_inject_mbe_; }




  uint8_t &q_minrate_static_disable_check() { return q_minrate_static_disable_check_; }




  uint8_t &q_minrate_static_inject_sbe() { return q_minrate_static_inject_sbe_; }




  uint8_t &q_minrate_static_inject_mbe() { return q_minrate_static_inject_mbe_; }




  uint8_t &q_minrate_dynamic_disable_check() { return q_minrate_dynamic_disable_check_; }




  uint8_t &q_minrate_dynamic_inject_sbe() { return q_minrate_dynamic_inject_sbe_; }




  uint8_t &q_minrate_dynamic_inject_mbe() { return q_minrate_dynamic_inject_mbe_; }




  uint8_t &q_excrate_static_disable_check() { return q_excrate_static_disable_check_; }




  uint8_t &q_excrate_static_inject_sbe() { return q_excrate_static_inject_sbe_; }




  uint8_t &q_excrate_static_inject_mbe() { return q_excrate_static_inject_mbe_; }




  uint8_t &q_excrate_dynamic_disable_check() { return q_excrate_dynamic_disable_check_; }




  uint8_t &q_excrate_dynamic_inject_sbe() { return q_excrate_dynamic_inject_sbe_; }




  uint8_t &q_excrate_dynamic_inject_mbe() { return q_excrate_dynamic_inject_mbe_; }




  uint8_t &q_maxrate_static_disable_check() { return q_maxrate_static_disable_check_; }




  uint8_t &q_maxrate_static_inject_sbe() { return q_maxrate_static_inject_sbe_; }




  uint8_t &q_maxrate_static_inject_mbe() { return q_maxrate_static_inject_mbe_; }




  uint8_t &q_maxrate_dynamic_disable_check() { return q_maxrate_dynamic_disable_check_; }




  uint8_t &q_maxrate_dynamic_inject_sbe() { return q_maxrate_dynamic_inject_sbe_; }




  uint8_t &q_maxrate_dynamic_inject_mbe() { return q_maxrate_dynamic_inject_mbe_; }




  uint8_t &p_maxrate_static_disable_check() { return p_maxrate_static_disable_check_; }




  uint8_t &p_maxrate_static_inject_sbe() { return p_maxrate_static_inject_sbe_; }




  uint8_t &p_maxrate_static_inject_mbe() { return p_maxrate_static_inject_mbe_; }




  uint8_t &p_maxrate_dynamic_disable_check() { return p_maxrate_dynamic_disable_check_; }




  uint8_t &p_maxrate_dynamic_inject_sbe() { return p_maxrate_dynamic_inject_sbe_; }




  uint8_t &p_maxrate_dynamic_inject_mbe() { return p_maxrate_dynamic_inject_mbe_; }




  uint8_t &q_upd_pex0_min_disable_check() { return q_upd_pex0_min_disable_check_; }




  uint8_t &q_upd_pex0_min_inject_sbe() { return q_upd_pex0_min_inject_sbe_; }




  uint8_t &q_upd_pex0_min_inject_mbe() { return q_upd_pex0_min_inject_mbe_; }




  uint8_t &p_upd_pex0_min_disable_check() { return p_upd_pex0_min_disable_check_; }




  uint8_t &p_upd_pex0_min_inject_sbe() { return p_upd_pex0_min_inject_sbe_; }




  uint8_t &p_upd_pex0_min_inject_mbe() { return p_upd_pex0_min_inject_mbe_; }




  uint8_t &q_upd_pex0_exc_disable_check() { return q_upd_pex0_exc_disable_check_; }




  uint8_t &q_upd_pex0_exc_inject_sbe() { return q_upd_pex0_exc_inject_sbe_; }




  uint8_t &q_upd_pex0_exc_inject_mbe() { return q_upd_pex0_exc_inject_mbe_; }




  uint8_t &p_upd_pex0_exc_disable_check() { return p_upd_pex0_exc_disable_check_; }




  uint8_t &p_upd_pex0_exc_inject_sbe() { return p_upd_pex0_exc_inject_sbe_; }




  uint8_t &p_upd_pex0_exc_inject_mbe() { return p_upd_pex0_exc_inject_mbe_; }




  uint8_t &q_upd_pex1_min_disable_check() { return q_upd_pex1_min_disable_check_; }




  uint8_t &q_upd_pex1_min_inject_sbe() { return q_upd_pex1_min_inject_sbe_; }




  uint8_t &q_upd_pex1_min_inject_mbe() { return q_upd_pex1_min_inject_mbe_; }




  uint8_t &p_upd_pex1_min_disable_check() { return p_upd_pex1_min_disable_check_; }




  uint8_t &p_upd_pex1_min_inject_sbe() { return p_upd_pex1_min_inject_sbe_; }




  uint8_t &p_upd_pex1_min_inject_mbe() { return p_upd_pex1_min_inject_mbe_; }




  uint8_t &q_upd_pex1_exc_disable_check() { return q_upd_pex1_exc_disable_check_; }




  uint8_t &q_upd_pex1_exc_inject_sbe() { return q_upd_pex1_exc_inject_sbe_; }




  uint8_t &q_upd_pex1_exc_inject_mbe() { return q_upd_pex1_exc_inject_mbe_; }




  uint8_t &p_upd_pex1_exc_disable_check() { return p_upd_pex1_exc_disable_check_; }




  uint8_t &p_upd_pex1_exc_inject_sbe() { return p_upd_pex1_exc_inject_sbe_; }




  uint8_t &p_upd_pex1_exc_inject_mbe() { return p_upd_pex1_exc_inject_mbe_; }




  uint8_t &q_upd_edprsr_min_disable_check() { return q_upd_edprsr_min_disable_check_; }




  uint8_t &q_upd_edprsr_min_inject_sbe() { return q_upd_edprsr_min_inject_sbe_; }




  uint8_t &q_upd_edprsr_min_inject_mbe() { return q_upd_edprsr_min_inject_mbe_; }




  uint8_t &p_upd_edprsr_min_disable_check() { return p_upd_edprsr_min_disable_check_; }




  uint8_t &p_upd_edprsr_min_inject_sbe() { return p_upd_edprsr_min_inject_sbe_; }




  uint8_t &p_upd_edprsr_min_inject_mbe() { return p_upd_edprsr_min_inject_mbe_; }




  uint8_t &q_upd_edprsr_exc_disable_check() { return q_upd_edprsr_exc_disable_check_; }




  uint8_t &q_upd_edprsr_exc_inject_sbe() { return q_upd_edprsr_exc_inject_sbe_; }




  uint8_t &q_upd_edprsr_exc_inject_mbe() { return q_upd_edprsr_exc_inject_mbe_; }




  uint8_t &p_upd_edprsr_exc_disable_check() { return p_upd_edprsr_exc_disable_check_; }




  uint8_t &p_upd_edprsr_exc_inject_sbe() { return p_upd_edprsr_exc_inject_sbe_; }




  uint8_t &p_upd_edprsr_exc_inject_mbe() { return p_upd_edprsr_exc_inject_mbe_; }

  bool read(
      uint32_t offset, uint32_t* data
      ) const {
    if (offset < 0x4) {
      if (read_callback_) read_callback_();
      *data = (tdm_table_disable_check_ & 0x1);
      *data |= ((tdm_table_inject_sbe_ & 0x1) << 1);
      *data |= ((tdm_table_inject_mbe_ & 0x1) << 2);
      *data |= ((q_minrate_static_disable_check_ & 0x1) << 4);
      *data |= ((q_minrate_static_inject_sbe_ & 0x1) << 5);
      *data |= ((q_minrate_static_inject_mbe_ & 0x1) << 6);
      *data |= ((q_minrate_dynamic_disable_check_ & 0x1) << 8);
      *data |= ((q_minrate_dynamic_inject_sbe_ & 0x1) << 9);
      *data |= ((q_minrate_dynamic_inject_mbe_ & 0x1) << 10);
      *data |= ((q_excrate_static_disable_check_ & 0x1) << 12);
      *data |= ((q_excrate_static_inject_sbe_ & 0x1) << 13);
      *data |= ((q_excrate_static_inject_mbe_ & 0x1) << 14);
      *data |= ((q_excrate_dynamic_disable_check_ & 0x1) << 16);
      *data |= ((q_excrate_dynamic_inject_sbe_ & 0x1) << 17);
      *data |= ((q_excrate_dynamic_inject_mbe_ & 0x1) << 18);
      *data |= ((q_maxrate_static_disable_check_ & 0x1) << 20);
      *data |= ((q_maxrate_static_inject_sbe_ & 0x1) << 21);
      *data |= ((q_maxrate_static_inject_mbe_ & 0x1) << 22);
      *data |= ((q_maxrate_dynamic_disable_check_ & 0x1) << 24);
      *data |= ((q_maxrate_dynamic_inject_sbe_ & 0x1) << 25);
      *data |= ((q_maxrate_dynamic_inject_mbe_ & 0x1) << 26);
      *data |= ((p_maxrate_static_disable_check_ & 0x1) << 28);
      *data |= ((p_maxrate_static_inject_sbe_ & 0x1) << 29);
      *data |= ((p_maxrate_static_inject_mbe_ & 0x1) << 30);
    }
    else if (offset >= 0x4 && offset < 0x8) {
      if (read_callback_) read_callback_();
      *data = (p_maxrate_dynamic_disable_check_ & 0x1);
      *data |= ((p_maxrate_dynamic_inject_sbe_ & 0x1) << 1);
      *data |= ((p_maxrate_dynamic_inject_mbe_ & 0x1) << 2);
      *data |= ((q_upd_pex0_min_disable_check_ & 0x1) << 4);
      *data |= ((q_upd_pex0_min_inject_sbe_ & 0x1) << 5);
      *data |= ((q_upd_pex0_min_inject_mbe_ & 0x1) << 6);
      *data |= ((p_upd_pex0_min_disable_check_ & 0x1) << 8);
      *data |= ((p_upd_pex0_min_inject_sbe_ & 0x1) << 9);
      *data |= ((p_upd_pex0_min_inject_mbe_ & 0x1) << 10);
      *data |= ((q_upd_pex0_exc_disable_check_ & 0x1) << 12);
      *data |= ((q_upd_pex0_exc_inject_sbe_ & 0x1) << 13);
      *data |= ((q_upd_pex0_exc_inject_mbe_ & 0x1) << 14);
      *data |= ((p_upd_pex0_exc_disable_check_ & 0x1) << 16);
      *data |= ((p_upd_pex0_exc_inject_sbe_ & 0x1) << 17);
      *data |= ((p_upd_pex0_exc_inject_mbe_ & 0x1) << 18);
      *data |= ((q_upd_pex1_min_disable_check_ & 0x1) << 20);
      *data |= ((q_upd_pex1_min_inject_sbe_ & 0x1) << 21);
      *data |= ((q_upd_pex1_min_inject_mbe_ & 0x1) << 22);
      *data |= ((p_upd_pex1_min_disable_check_ & 0x1) << 24);
      *data |= ((p_upd_pex1_min_inject_sbe_ & 0x1) << 25);
      *data |= ((p_upd_pex1_min_inject_mbe_ & 0x1) << 26);
      *data |= ((q_upd_pex1_exc_disable_check_ & 0x1) << 28);
      *data |= ((q_upd_pex1_exc_inject_sbe_ & 0x1) << 29);
      *data |= ((q_upd_pex1_exc_inject_mbe_ & 0x1) << 30);
    }
    else if (offset >= 0x8 && offset < 0xc) {
      if (read_callback_) read_callback_();
      *data = (p_upd_pex1_exc_disable_check_ & 0x1);
      *data |= ((p_upd_pex1_exc_inject_sbe_ & 0x1) << 1);
      *data |= ((p_upd_pex1_exc_inject_mbe_ & 0x1) << 2);
      *data |= ((q_upd_edprsr_min_disable_check_ & 0x1) << 4);
      *data |= ((q_upd_edprsr_min_inject_sbe_ & 0x1) << 5);
      *data |= ((q_upd_edprsr_min_inject_mbe_ & 0x1) << 6);
      *data |= ((p_upd_edprsr_min_disable_check_ & 0x1) << 8);
      *data |= ((p_upd_edprsr_min_inject_sbe_ & 0x1) << 9);
      *data |= ((p_upd_edprsr_min_inject_mbe_ & 0x1) << 10);
      *data |= ((q_upd_edprsr_exc_disable_check_ & 0x1) << 12);
      *data |= ((q_upd_edprsr_exc_inject_sbe_ & 0x1) << 13);
      *data |= ((q_upd_edprsr_exc_inject_mbe_ & 0x1) << 14);
      *data |= ((p_upd_edprsr_exc_disable_check_ & 0x1) << 16);
      *data |= ((p_upd_edprsr_exc_inject_sbe_ & 0x1) << 17);
      *data |= ((p_upd_edprsr_exc_inject_mbe_ & 0x1) << 18);
    }
    else {
      assert(0);
    }
    return true;
  }


  bool write(
      uint32_t offset, uint32_t data
      ) {
    if (offset < 0x4) {
      tdm_table_disable_check_ = (data & 0x1);
      tdm_table_inject_sbe_ = ((data >> 1) & 0x1);
      tdm_table_inject_mbe_ = ((data >> 2) & 0x1);
      q_minrate_static_disable_check_ = ((data >> 4) & 0x1);
      q_minrate_static_inject_sbe_ = ((data >> 5) & 0x1);
      q_minrate_static_inject_mbe_ = ((data >> 6) & 0x1);
      q_minrate_dynamic_disable_check_ = ((data >> 8) & 0x1);
      q_minrate_dynamic_inject_sbe_ = ((data >> 9) & 0x1);
      q_minrate_dynamic_inject_mbe_ = ((data >> 10) & 0x1);
      q_excrate_static_disable_check_ = ((data >> 12) & 0x1);
      q_excrate_static_inject_sbe_ = ((data >> 13) & 0x1);
      q_excrate_static_inject_mbe_ = ((data >> 14) & 0x1);
      q_excrate_dynamic_disable_check_ = ((data >> 16) & 0x1);
      q_excrate_dynamic_inject_sbe_ = ((data >> 17) & 0x1);
      q_excrate_dynamic_inject_mbe_ = ((data >> 18) & 0x1);
      q_maxrate_static_disable_check_ = ((data >> 20) & 0x1);
      q_maxrate_static_inject_sbe_ = ((data >> 21) & 0x1);
      q_maxrate_static_inject_mbe_ = ((data >> 22) & 0x1);
      q_maxrate_dynamic_disable_check_ = ((data >> 24) & 0x1);
      q_maxrate_dynamic_inject_sbe_ = ((data >> 25) & 0x1);
      q_maxrate_dynamic_inject_mbe_ = ((data >> 26) & 0x1);
      p_maxrate_static_disable_check_ = ((data >> 28) & 0x1);
      p_maxrate_static_inject_sbe_ = ((data >> 29) & 0x1);
      p_maxrate_static_inject_mbe_ = ((data >> 30) & 0x1);
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x4 && offset < 0x8) {
      p_maxrate_dynamic_disable_check_ = (data & 0x1);
      p_maxrate_dynamic_inject_sbe_ = ((data >> 1) & 0x1);
      p_maxrate_dynamic_inject_mbe_ = ((data >> 2) & 0x1);
      q_upd_pex0_min_disable_check_ = ((data >> 4) & 0x1);
      q_upd_pex0_min_inject_sbe_ = ((data >> 5) & 0x1);
      q_upd_pex0_min_inject_mbe_ = ((data >> 6) & 0x1);
      p_upd_pex0_min_disable_check_ = ((data >> 8) & 0x1);
      p_upd_pex0_min_inject_sbe_ = ((data >> 9) & 0x1);
      p_upd_pex0_min_inject_mbe_ = ((data >> 10) & 0x1);
      q_upd_pex0_exc_disable_check_ = ((data >> 12) & 0x1);
      q_upd_pex0_exc_inject_sbe_ = ((data >> 13) & 0x1);
      q_upd_pex0_exc_inject_mbe_ = ((data >> 14) & 0x1);
      p_upd_pex0_exc_disable_check_ = ((data >> 16) & 0x1);
      p_upd_pex0_exc_inject_sbe_ = ((data >> 17) & 0x1);
      p_upd_pex0_exc_inject_mbe_ = ((data >> 18) & 0x1);
      q_upd_pex1_min_disable_check_ = ((data >> 20) & 0x1);
      q_upd_pex1_min_inject_sbe_ = ((data >> 21) & 0x1);
      q_upd_pex1_min_inject_mbe_ = ((data >> 22) & 0x1);
      p_upd_pex1_min_disable_check_ = ((data >> 24) & 0x1);
      p_upd_pex1_min_inject_sbe_ = ((data >> 25) & 0x1);
      p_upd_pex1_min_inject_mbe_ = ((data >> 26) & 0x1);
      q_upd_pex1_exc_disable_check_ = ((data >> 28) & 0x1);
      q_upd_pex1_exc_inject_sbe_ = ((data >> 29) & 0x1);
      q_upd_pex1_exc_inject_mbe_ = ((data >> 30) & 0x1);
      if (write_callback_) write_callback_();
    }
    else if (offset >= 0x8 && offset < 0xc) {
      p_upd_pex1_exc_disable_check_ = (data & 0x1);
      p_upd_pex1_exc_inject_sbe_ = ((data >> 1) & 0x1);
      p_upd_pex1_exc_inject_mbe_ = ((data >> 2) & 0x1);
      q_upd_edprsr_min_disable_check_ = ((data >> 4) & 0x1);
      q_upd_edprsr_min_inject_sbe_ = ((data >> 5) & 0x1);
      q_upd_edprsr_min_inject_mbe_ = ((data >> 6) & 0x1);
      p_upd_edprsr_min_disable_check_ = ((data >> 8) & 0x1);
      p_upd_edprsr_min_inject_sbe_ = ((data >> 9) & 0x1);
      p_upd_edprsr_min_inject_mbe_ = ((data >> 10) & 0x1);
      q_upd_edprsr_exc_disable_check_ = ((data >> 12) & 0x1);
      q_upd_edprsr_exc_inject_sbe_ = ((data >> 13) & 0x1);
      q_upd_edprsr_exc_inject_mbe_ = ((data >> 14) & 0x1);
      p_upd_edprsr_exc_disable_check_ = ((data >> 16) & 0x1);
      p_upd_edprsr_exc_inject_sbe_ = ((data >> 17) & 0x1);
      p_upd_edprsr_exc_inject_mbe_ = ((data >> 18) & 0x1);
      if (write_callback_) write_callback_();
    }
    else {
      assert(0);
    }
    return true;
  }

  void reset(
      
      ) {
    tdm_table_disable_check_ = 0x0;
    tdm_table_inject_sbe_ = 0x0;
    tdm_table_inject_mbe_ = 0x0;
    q_minrate_static_disable_check_ = 0x0;
    q_minrate_static_inject_sbe_ = 0x0;
    q_minrate_static_inject_mbe_ = 0x0;
    q_minrate_dynamic_disable_check_ = 0x0;
    q_minrate_dynamic_inject_sbe_ = 0x0;
    q_minrate_dynamic_inject_mbe_ = 0x0;
    q_excrate_static_disable_check_ = 0x0;
    q_excrate_static_inject_sbe_ = 0x0;
    q_excrate_static_inject_mbe_ = 0x0;
    q_excrate_dynamic_disable_check_ = 0x0;
    q_excrate_dynamic_inject_sbe_ = 0x0;
    q_excrate_dynamic_inject_mbe_ = 0x0;
    q_maxrate_static_disable_check_ = 0x0;
    q_maxrate_static_inject_sbe_ = 0x0;
    q_maxrate_static_inject_mbe_ = 0x0;
    q_maxrate_dynamic_disable_check_ = 0x0;
    q_maxrate_dynamic_inject_sbe_ = 0x0;
    q_maxrate_dynamic_inject_mbe_ = 0x0;
    p_maxrate_static_disable_check_ = 0x0;
    p_maxrate_static_inject_sbe_ = 0x0;
    p_maxrate_static_inject_mbe_ = 0x0;
    p_maxrate_dynamic_disable_check_ = 0x0;
    p_maxrate_dynamic_inject_sbe_ = 0x0;
    p_maxrate_dynamic_inject_mbe_ = 0x0;
    q_upd_pex0_min_disable_check_ = 0x0;
    q_upd_pex0_min_inject_sbe_ = 0x0;
    q_upd_pex0_min_inject_mbe_ = 0x0;
    p_upd_pex0_min_disable_check_ = 0x0;
    p_upd_pex0_min_inject_sbe_ = 0x0;
    p_upd_pex0_min_inject_mbe_ = 0x0;
    q_upd_pex0_exc_disable_check_ = 0x0;
    q_upd_pex0_exc_inject_sbe_ = 0x0;
    q_upd_pex0_exc_inject_mbe_ = 0x0;
    p_upd_pex0_exc_disable_check_ = 0x0;
    p_upd_pex0_exc_inject_sbe_ = 0x0;
    p_upd_pex0_exc_inject_mbe_ = 0x0;
    q_upd_pex1_min_disable_check_ = 0x0;
    q_upd_pex1_min_inject_sbe_ = 0x0;
    q_upd_pex1_min_inject_mbe_ = 0x0;
    p_upd_pex1_min_disable_check_ = 0x0;
    p_upd_pex1_min_inject_sbe_ = 0x0;
    p_upd_pex1_min_inject_mbe_ = 0x0;
    q_upd_pex1_exc_disable_check_ = 0x0;
    q_upd_pex1_exc_inject_sbe_ = 0x0;
    q_upd_pex1_exc_inject_mbe_ = 0x0;
    p_upd_pex1_exc_disable_check_ = 0x0;
    p_upd_pex1_exc_inject_sbe_ = 0x0;
    p_upd_pex1_exc_inject_mbe_ = 0x0;
    q_upd_edprsr_min_disable_check_ = 0x0;
    q_upd_edprsr_min_inject_sbe_ = 0x0;
    q_upd_edprsr_min_inject_mbe_ = 0x0;
    p_upd_edprsr_min_disable_check_ = 0x0;
    p_upd_edprsr_min_inject_sbe_ = 0x0;
    p_upd_edprsr_min_inject_mbe_ = 0x0;
    q_upd_edprsr_exc_disable_check_ = 0x0;
    q_upd_edprsr_exc_inject_sbe_ = 0x0;
    q_upd_edprsr_exc_inject_mbe_ = 0x0;
    p_upd_edprsr_exc_disable_check_ = 0x0;
    p_upd_edprsr_exc_inject_sbe_ = 0x0;
    p_upd_edprsr_exc_inject_mbe_ = 0x0;
    if (write_callback_) write_callback_();
  }

  std::string to_string(
      uint32_t offset, bool print_zeros = false, std::string indent_string = ""
      ) const {
    std::string r("");
    bool all_zeros=true;
    r += indent_string + std::string("TmSchPipeRspecEcc") + ":\n";
    r += indent_string + "  " + std::string("tdm_table_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(tdm_table_disable_check_) ) + "\n";
    all_zeros &= (0 == tdm_table_disable_check_);
    r += indent_string + "  " + std::string("tdm_table_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(tdm_table_inject_sbe_) ) + "\n";
    all_zeros &= (0 == tdm_table_inject_sbe_);
    r += indent_string + "  " + std::string("tdm_table_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(tdm_table_inject_mbe_) ) + "\n";
    all_zeros &= (0 == tdm_table_inject_mbe_);
    r += indent_string + "  " + std::string("q_minrate_static_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_minrate_static_disable_check_) ) + "\n";
    all_zeros &= (0 == q_minrate_static_disable_check_);
    r += indent_string + "  " + std::string("q_minrate_static_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_minrate_static_inject_sbe_) ) + "\n";
    all_zeros &= (0 == q_minrate_static_inject_sbe_);
    r += indent_string + "  " + std::string("q_minrate_static_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_minrate_static_inject_mbe_) ) + "\n";
    all_zeros &= (0 == q_minrate_static_inject_mbe_);
    r += indent_string + "  " + std::string("q_minrate_dynamic_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_minrate_dynamic_disable_check_) ) + "\n";
    all_zeros &= (0 == q_minrate_dynamic_disable_check_);
    r += indent_string + "  " + std::string("q_minrate_dynamic_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_minrate_dynamic_inject_sbe_) ) + "\n";
    all_zeros &= (0 == q_minrate_dynamic_inject_sbe_);
    r += indent_string + "  " + std::string("q_minrate_dynamic_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_minrate_dynamic_inject_mbe_) ) + "\n";
    all_zeros &= (0 == q_minrate_dynamic_inject_mbe_);
    r += indent_string + "  " + std::string("q_excrate_static_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_excrate_static_disable_check_) ) + "\n";
    all_zeros &= (0 == q_excrate_static_disable_check_);
    r += indent_string + "  " + std::string("q_excrate_static_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_excrate_static_inject_sbe_) ) + "\n";
    all_zeros &= (0 == q_excrate_static_inject_sbe_);
    r += indent_string + "  " + std::string("q_excrate_static_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_excrate_static_inject_mbe_) ) + "\n";
    all_zeros &= (0 == q_excrate_static_inject_mbe_);
    r += indent_string + "  " + std::string("q_excrate_dynamic_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_excrate_dynamic_disable_check_) ) + "\n";
    all_zeros &= (0 == q_excrate_dynamic_disable_check_);
    r += indent_string + "  " + std::string("q_excrate_dynamic_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_excrate_dynamic_inject_sbe_) ) + "\n";
    all_zeros &= (0 == q_excrate_dynamic_inject_sbe_);
    r += indent_string + "  " + std::string("q_excrate_dynamic_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_excrate_dynamic_inject_mbe_) ) + "\n";
    all_zeros &= (0 == q_excrate_dynamic_inject_mbe_);
    r += indent_string + "  " + std::string("q_maxrate_static_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_maxrate_static_disable_check_) ) + "\n";
    all_zeros &= (0 == q_maxrate_static_disable_check_);
    r += indent_string + "  " + std::string("q_maxrate_static_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_maxrate_static_inject_sbe_) ) + "\n";
    all_zeros &= (0 == q_maxrate_static_inject_sbe_);
    r += indent_string + "  " + std::string("q_maxrate_static_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_maxrate_static_inject_mbe_) ) + "\n";
    all_zeros &= (0 == q_maxrate_static_inject_mbe_);
    r += indent_string + "  " + std::string("q_maxrate_dynamic_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_maxrate_dynamic_disable_check_) ) + "\n";
    all_zeros &= (0 == q_maxrate_dynamic_disable_check_);
    r += indent_string + "  " + std::string("q_maxrate_dynamic_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_maxrate_dynamic_inject_sbe_) ) + "\n";
    all_zeros &= (0 == q_maxrate_dynamic_inject_sbe_);
    r += indent_string + "  " + std::string("q_maxrate_dynamic_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_maxrate_dynamic_inject_mbe_) ) + "\n";
    all_zeros &= (0 == q_maxrate_dynamic_inject_mbe_);
    r += indent_string + "  " + std::string("p_maxrate_static_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_maxrate_static_disable_check_) ) + "\n";
    all_zeros &= (0 == p_maxrate_static_disable_check_);
    r += indent_string + "  " + std::string("p_maxrate_static_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_maxrate_static_inject_sbe_) ) + "\n";
    all_zeros &= (0 == p_maxrate_static_inject_sbe_);
    r += indent_string + "  " + std::string("p_maxrate_static_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_maxrate_static_inject_mbe_) ) + "\n";
    all_zeros &= (0 == p_maxrate_static_inject_mbe_);
    r += indent_string + "  " + std::string("p_maxrate_dynamic_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_maxrate_dynamic_disable_check_) ) + "\n";
    all_zeros &= (0 == p_maxrate_dynamic_disable_check_);
    r += indent_string + "  " + std::string("p_maxrate_dynamic_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_maxrate_dynamic_inject_sbe_) ) + "\n";
    all_zeros &= (0 == p_maxrate_dynamic_inject_sbe_);
    r += indent_string + "  " + std::string("p_maxrate_dynamic_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_maxrate_dynamic_inject_mbe_) ) + "\n";
    all_zeros &= (0 == p_maxrate_dynamic_inject_mbe_);
    r += indent_string + "  " + std::string("q_upd_pex0_min_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_pex0_min_disable_check_) ) + "\n";
    all_zeros &= (0 == q_upd_pex0_min_disable_check_);
    r += indent_string + "  " + std::string("q_upd_pex0_min_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_pex0_min_inject_sbe_) ) + "\n";
    all_zeros &= (0 == q_upd_pex0_min_inject_sbe_);
    r += indent_string + "  " + std::string("q_upd_pex0_min_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_pex0_min_inject_mbe_) ) + "\n";
    all_zeros &= (0 == q_upd_pex0_min_inject_mbe_);
    r += indent_string + "  " + std::string("p_upd_pex0_min_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_pex0_min_disable_check_) ) + "\n";
    all_zeros &= (0 == p_upd_pex0_min_disable_check_);
    r += indent_string + "  " + std::string("p_upd_pex0_min_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_pex0_min_inject_sbe_) ) + "\n";
    all_zeros &= (0 == p_upd_pex0_min_inject_sbe_);
    r += indent_string + "  " + std::string("p_upd_pex0_min_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_pex0_min_inject_mbe_) ) + "\n";
    all_zeros &= (0 == p_upd_pex0_min_inject_mbe_);
    r += indent_string + "  " + std::string("q_upd_pex0_exc_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_pex0_exc_disable_check_) ) + "\n";
    all_zeros &= (0 == q_upd_pex0_exc_disable_check_);
    r += indent_string + "  " + std::string("q_upd_pex0_exc_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_pex0_exc_inject_sbe_) ) + "\n";
    all_zeros &= (0 == q_upd_pex0_exc_inject_sbe_);
    r += indent_string + "  " + std::string("q_upd_pex0_exc_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_pex0_exc_inject_mbe_) ) + "\n";
    all_zeros &= (0 == q_upd_pex0_exc_inject_mbe_);
    r += indent_string + "  " + std::string("p_upd_pex0_exc_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_pex0_exc_disable_check_) ) + "\n";
    all_zeros &= (0 == p_upd_pex0_exc_disable_check_);
    r += indent_string + "  " + std::string("p_upd_pex0_exc_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_pex0_exc_inject_sbe_) ) + "\n";
    all_zeros &= (0 == p_upd_pex0_exc_inject_sbe_);
    r += indent_string + "  " + std::string("p_upd_pex0_exc_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_pex0_exc_inject_mbe_) ) + "\n";
    all_zeros &= (0 == p_upd_pex0_exc_inject_mbe_);
    r += indent_string + "  " + std::string("q_upd_pex1_min_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_pex1_min_disable_check_) ) + "\n";
    all_zeros &= (0 == q_upd_pex1_min_disable_check_);
    r += indent_string + "  " + std::string("q_upd_pex1_min_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_pex1_min_inject_sbe_) ) + "\n";
    all_zeros &= (0 == q_upd_pex1_min_inject_sbe_);
    r += indent_string + "  " + std::string("q_upd_pex1_min_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_pex1_min_inject_mbe_) ) + "\n";
    all_zeros &= (0 == q_upd_pex1_min_inject_mbe_);
    r += indent_string + "  " + std::string("p_upd_pex1_min_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_pex1_min_disable_check_) ) + "\n";
    all_zeros &= (0 == p_upd_pex1_min_disable_check_);
    r += indent_string + "  " + std::string("p_upd_pex1_min_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_pex1_min_inject_sbe_) ) + "\n";
    all_zeros &= (0 == p_upd_pex1_min_inject_sbe_);
    r += indent_string + "  " + std::string("p_upd_pex1_min_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_pex1_min_inject_mbe_) ) + "\n";
    all_zeros &= (0 == p_upd_pex1_min_inject_mbe_);
    r += indent_string + "  " + std::string("q_upd_pex1_exc_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_pex1_exc_disable_check_) ) + "\n";
    all_zeros &= (0 == q_upd_pex1_exc_disable_check_);
    r += indent_string + "  " + std::string("q_upd_pex1_exc_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_pex1_exc_inject_sbe_) ) + "\n";
    all_zeros &= (0 == q_upd_pex1_exc_inject_sbe_);
    r += indent_string + "  " + std::string("q_upd_pex1_exc_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_pex1_exc_inject_mbe_) ) + "\n";
    all_zeros &= (0 == q_upd_pex1_exc_inject_mbe_);
    r += indent_string + "  " + std::string("p_upd_pex1_exc_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_pex1_exc_disable_check_) ) + "\n";
    all_zeros &= (0 == p_upd_pex1_exc_disable_check_);
    r += indent_string + "  " + std::string("p_upd_pex1_exc_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_pex1_exc_inject_sbe_) ) + "\n";
    all_zeros &= (0 == p_upd_pex1_exc_inject_sbe_);
    r += indent_string + "  " + std::string("p_upd_pex1_exc_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_pex1_exc_inject_mbe_) ) + "\n";
    all_zeros &= (0 == p_upd_pex1_exc_inject_mbe_);
    r += indent_string + "  " + std::string("q_upd_edprsr_min_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_edprsr_min_disable_check_) ) + "\n";
    all_zeros &= (0 == q_upd_edprsr_min_disable_check_);
    r += indent_string + "  " + std::string("q_upd_edprsr_min_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_edprsr_min_inject_sbe_) ) + "\n";
    all_zeros &= (0 == q_upd_edprsr_min_inject_sbe_);
    r += indent_string + "  " + std::string("q_upd_edprsr_min_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_edprsr_min_inject_mbe_) ) + "\n";
    all_zeros &= (0 == q_upd_edprsr_min_inject_mbe_);
    r += indent_string + "  " + std::string("p_upd_edprsr_min_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_edprsr_min_disable_check_) ) + "\n";
    all_zeros &= (0 == p_upd_edprsr_min_disable_check_);
    r += indent_string + "  " + std::string("p_upd_edprsr_min_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_edprsr_min_inject_sbe_) ) + "\n";
    all_zeros &= (0 == p_upd_edprsr_min_inject_sbe_);
    r += indent_string + "  " + std::string("p_upd_edprsr_min_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_edprsr_min_inject_mbe_) ) + "\n";
    all_zeros &= (0 == p_upd_edprsr_min_inject_mbe_);
    r += indent_string + "  " + std::string("q_upd_edprsr_exc_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_edprsr_exc_disable_check_) ) + "\n";
    all_zeros &= (0 == q_upd_edprsr_exc_disable_check_);
    r += indent_string + "  " + std::string("q_upd_edprsr_exc_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_edprsr_exc_inject_sbe_) ) + "\n";
    all_zeros &= (0 == q_upd_edprsr_exc_inject_sbe_);
    r += indent_string + "  " + std::string("q_upd_edprsr_exc_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_edprsr_exc_inject_mbe_) ) + "\n";
    all_zeros &= (0 == q_upd_edprsr_exc_inject_mbe_);
    r += indent_string + "  " + std::string("p_upd_edprsr_exc_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_edprsr_exc_disable_check_) ) + "\n";
    all_zeros &= (0 == p_upd_edprsr_exc_disable_check_);
    r += indent_string + "  " + std::string("p_upd_edprsr_exc_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_edprsr_exc_inject_sbe_) ) + "\n";
    all_zeros &= (0 == p_upd_edprsr_exc_inject_sbe_);
    r += indent_string + "  " + std::string("p_upd_edprsr_exc_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_edprsr_exc_inject_mbe_) ) + "\n";
    all_zeros &= (0 == p_upd_edprsr_exc_inject_mbe_);
    if (all_zeros && !print_zeros) {
      return("");
    }
    else {
      return r;
    }
  }

  std::string to_string(
      bool print_zeros = false, std::string indent_string = ""
      ) const {
    std::string r("");
    bool all_zeros=true;
    r += indent_string + std::string("TmSchPipeRspecEcc") + ":\n";
    r += indent_string + "  " + std::string("tdm_table_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(tdm_table_disable_check_) ) + "\n";
    all_zeros &= (0 == tdm_table_disable_check_);
    r += indent_string + "  " + std::string("tdm_table_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(tdm_table_inject_sbe_) ) + "\n";
    all_zeros &= (0 == tdm_table_inject_sbe_);
    r += indent_string + "  " + std::string("tdm_table_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(tdm_table_inject_mbe_) ) + "\n";
    all_zeros &= (0 == tdm_table_inject_mbe_);
    r += indent_string + "  " + std::string("q_minrate_static_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_minrate_static_disable_check_) ) + "\n";
    all_zeros &= (0 == q_minrate_static_disable_check_);
    r += indent_string + "  " + std::string("q_minrate_static_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_minrate_static_inject_sbe_) ) + "\n";
    all_zeros &= (0 == q_minrate_static_inject_sbe_);
    r += indent_string + "  " + std::string("q_minrate_static_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_minrate_static_inject_mbe_) ) + "\n";
    all_zeros &= (0 == q_minrate_static_inject_mbe_);
    r += indent_string + "  " + std::string("q_minrate_dynamic_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_minrate_dynamic_disable_check_) ) + "\n";
    all_zeros &= (0 == q_minrate_dynamic_disable_check_);
    r += indent_string + "  " + std::string("q_minrate_dynamic_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_minrate_dynamic_inject_sbe_) ) + "\n";
    all_zeros &= (0 == q_minrate_dynamic_inject_sbe_);
    r += indent_string + "  " + std::string("q_minrate_dynamic_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_minrate_dynamic_inject_mbe_) ) + "\n";
    all_zeros &= (0 == q_minrate_dynamic_inject_mbe_);
    r += indent_string + "  " + std::string("q_excrate_static_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_excrate_static_disable_check_) ) + "\n";
    all_zeros &= (0 == q_excrate_static_disable_check_);
    r += indent_string + "  " + std::string("q_excrate_static_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_excrate_static_inject_sbe_) ) + "\n";
    all_zeros &= (0 == q_excrate_static_inject_sbe_);
    r += indent_string + "  " + std::string("q_excrate_static_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_excrate_static_inject_mbe_) ) + "\n";
    all_zeros &= (0 == q_excrate_static_inject_mbe_);
    r += indent_string + "  " + std::string("q_excrate_dynamic_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_excrate_dynamic_disable_check_) ) + "\n";
    all_zeros &= (0 == q_excrate_dynamic_disable_check_);
    r += indent_string + "  " + std::string("q_excrate_dynamic_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_excrate_dynamic_inject_sbe_) ) + "\n";
    all_zeros &= (0 == q_excrate_dynamic_inject_sbe_);
    r += indent_string + "  " + std::string("q_excrate_dynamic_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_excrate_dynamic_inject_mbe_) ) + "\n";
    all_zeros &= (0 == q_excrate_dynamic_inject_mbe_);
    r += indent_string + "  " + std::string("q_maxrate_static_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_maxrate_static_disable_check_) ) + "\n";
    all_zeros &= (0 == q_maxrate_static_disable_check_);
    r += indent_string + "  " + std::string("q_maxrate_static_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_maxrate_static_inject_sbe_) ) + "\n";
    all_zeros &= (0 == q_maxrate_static_inject_sbe_);
    r += indent_string + "  " + std::string("q_maxrate_static_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_maxrate_static_inject_mbe_) ) + "\n";
    all_zeros &= (0 == q_maxrate_static_inject_mbe_);
    r += indent_string + "  " + std::string("q_maxrate_dynamic_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_maxrate_dynamic_disable_check_) ) + "\n";
    all_zeros &= (0 == q_maxrate_dynamic_disable_check_);
    r += indent_string + "  " + std::string("q_maxrate_dynamic_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_maxrate_dynamic_inject_sbe_) ) + "\n";
    all_zeros &= (0 == q_maxrate_dynamic_inject_sbe_);
    r += indent_string + "  " + std::string("q_maxrate_dynamic_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_maxrate_dynamic_inject_mbe_) ) + "\n";
    all_zeros &= (0 == q_maxrate_dynamic_inject_mbe_);
    r += indent_string + "  " + std::string("p_maxrate_static_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_maxrate_static_disable_check_) ) + "\n";
    all_zeros &= (0 == p_maxrate_static_disable_check_);
    r += indent_string + "  " + std::string("p_maxrate_static_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_maxrate_static_inject_sbe_) ) + "\n";
    all_zeros &= (0 == p_maxrate_static_inject_sbe_);
    r += indent_string + "  " + std::string("p_maxrate_static_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_maxrate_static_inject_mbe_) ) + "\n";
    all_zeros &= (0 == p_maxrate_static_inject_mbe_);
    r += indent_string + "  " + std::string("p_maxrate_dynamic_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_maxrate_dynamic_disable_check_) ) + "\n";
    all_zeros &= (0 == p_maxrate_dynamic_disable_check_);
    r += indent_string + "  " + std::string("p_maxrate_dynamic_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_maxrate_dynamic_inject_sbe_) ) + "\n";
    all_zeros &= (0 == p_maxrate_dynamic_inject_sbe_);
    r += indent_string + "  " + std::string("p_maxrate_dynamic_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_maxrate_dynamic_inject_mbe_) ) + "\n";
    all_zeros &= (0 == p_maxrate_dynamic_inject_mbe_);
    r += indent_string + "  " + std::string("q_upd_pex0_min_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_pex0_min_disable_check_) ) + "\n";
    all_zeros &= (0 == q_upd_pex0_min_disable_check_);
    r += indent_string + "  " + std::string("q_upd_pex0_min_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_pex0_min_inject_sbe_) ) + "\n";
    all_zeros &= (0 == q_upd_pex0_min_inject_sbe_);
    r += indent_string + "  " + std::string("q_upd_pex0_min_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_pex0_min_inject_mbe_) ) + "\n";
    all_zeros &= (0 == q_upd_pex0_min_inject_mbe_);
    r += indent_string + "  " + std::string("p_upd_pex0_min_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_pex0_min_disable_check_) ) + "\n";
    all_zeros &= (0 == p_upd_pex0_min_disable_check_);
    r += indent_string + "  " + std::string("p_upd_pex0_min_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_pex0_min_inject_sbe_) ) + "\n";
    all_zeros &= (0 == p_upd_pex0_min_inject_sbe_);
    r += indent_string + "  " + std::string("p_upd_pex0_min_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_pex0_min_inject_mbe_) ) + "\n";
    all_zeros &= (0 == p_upd_pex0_min_inject_mbe_);
    r += indent_string + "  " + std::string("q_upd_pex0_exc_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_pex0_exc_disable_check_) ) + "\n";
    all_zeros &= (0 == q_upd_pex0_exc_disable_check_);
    r += indent_string + "  " + std::string("q_upd_pex0_exc_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_pex0_exc_inject_sbe_) ) + "\n";
    all_zeros &= (0 == q_upd_pex0_exc_inject_sbe_);
    r += indent_string + "  " + std::string("q_upd_pex0_exc_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_pex0_exc_inject_mbe_) ) + "\n";
    all_zeros &= (0 == q_upd_pex0_exc_inject_mbe_);
    r += indent_string + "  " + std::string("p_upd_pex0_exc_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_pex0_exc_disable_check_) ) + "\n";
    all_zeros &= (0 == p_upd_pex0_exc_disable_check_);
    r += indent_string + "  " + std::string("p_upd_pex0_exc_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_pex0_exc_inject_sbe_) ) + "\n";
    all_zeros &= (0 == p_upd_pex0_exc_inject_sbe_);
    r += indent_string + "  " + std::string("p_upd_pex0_exc_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_pex0_exc_inject_mbe_) ) + "\n";
    all_zeros &= (0 == p_upd_pex0_exc_inject_mbe_);
    r += indent_string + "  " + std::string("q_upd_pex1_min_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_pex1_min_disable_check_) ) + "\n";
    all_zeros &= (0 == q_upd_pex1_min_disable_check_);
    r += indent_string + "  " + std::string("q_upd_pex1_min_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_pex1_min_inject_sbe_) ) + "\n";
    all_zeros &= (0 == q_upd_pex1_min_inject_sbe_);
    r += indent_string + "  " + std::string("q_upd_pex1_min_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_pex1_min_inject_mbe_) ) + "\n";
    all_zeros &= (0 == q_upd_pex1_min_inject_mbe_);
    r += indent_string + "  " + std::string("p_upd_pex1_min_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_pex1_min_disable_check_) ) + "\n";
    all_zeros &= (0 == p_upd_pex1_min_disable_check_);
    r += indent_string + "  " + std::string("p_upd_pex1_min_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_pex1_min_inject_sbe_) ) + "\n";
    all_zeros &= (0 == p_upd_pex1_min_inject_sbe_);
    r += indent_string + "  " + std::string("p_upd_pex1_min_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_pex1_min_inject_mbe_) ) + "\n";
    all_zeros &= (0 == p_upd_pex1_min_inject_mbe_);
    r += indent_string + "  " + std::string("q_upd_pex1_exc_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_pex1_exc_disable_check_) ) + "\n";
    all_zeros &= (0 == q_upd_pex1_exc_disable_check_);
    r += indent_string + "  " + std::string("q_upd_pex1_exc_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_pex1_exc_inject_sbe_) ) + "\n";
    all_zeros &= (0 == q_upd_pex1_exc_inject_sbe_);
    r += indent_string + "  " + std::string("q_upd_pex1_exc_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_pex1_exc_inject_mbe_) ) + "\n";
    all_zeros &= (0 == q_upd_pex1_exc_inject_mbe_);
    r += indent_string + "  " + std::string("p_upd_pex1_exc_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_pex1_exc_disable_check_) ) + "\n";
    all_zeros &= (0 == p_upd_pex1_exc_disable_check_);
    r += indent_string + "  " + std::string("p_upd_pex1_exc_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_pex1_exc_inject_sbe_) ) + "\n";
    all_zeros &= (0 == p_upd_pex1_exc_inject_sbe_);
    r += indent_string + "  " + std::string("p_upd_pex1_exc_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_pex1_exc_inject_mbe_) ) + "\n";
    all_zeros &= (0 == p_upd_pex1_exc_inject_mbe_);
    r += indent_string + "  " + std::string("q_upd_edprsr_min_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_edprsr_min_disable_check_) ) + "\n";
    all_zeros &= (0 == q_upd_edprsr_min_disable_check_);
    r += indent_string + "  " + std::string("q_upd_edprsr_min_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_edprsr_min_inject_sbe_) ) + "\n";
    all_zeros &= (0 == q_upd_edprsr_min_inject_sbe_);
    r += indent_string + "  " + std::string("q_upd_edprsr_min_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_edprsr_min_inject_mbe_) ) + "\n";
    all_zeros &= (0 == q_upd_edprsr_min_inject_mbe_);
    r += indent_string + "  " + std::string("p_upd_edprsr_min_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_edprsr_min_disable_check_) ) + "\n";
    all_zeros &= (0 == p_upd_edprsr_min_disable_check_);
    r += indent_string + "  " + std::string("p_upd_edprsr_min_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_edprsr_min_inject_sbe_) ) + "\n";
    all_zeros &= (0 == p_upd_edprsr_min_inject_sbe_);
    r += indent_string + "  " + std::string("p_upd_edprsr_min_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_edprsr_min_inject_mbe_) ) + "\n";
    all_zeros &= (0 == p_upd_edprsr_min_inject_mbe_);
    r += indent_string + "  " + std::string("q_upd_edprsr_exc_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_edprsr_exc_disable_check_) ) + "\n";
    all_zeros &= (0 == q_upd_edprsr_exc_disable_check_);
    r += indent_string + "  " + std::string("q_upd_edprsr_exc_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_edprsr_exc_inject_sbe_) ) + "\n";
    all_zeros &= (0 == q_upd_edprsr_exc_inject_sbe_);
    r += indent_string + "  " + std::string("q_upd_edprsr_exc_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(q_upd_edprsr_exc_inject_mbe_) ) + "\n";
    all_zeros &= (0 == q_upd_edprsr_exc_inject_mbe_);
    r += indent_string + "  " + std::string("p_upd_edprsr_exc_disable_check") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_edprsr_exc_disable_check_) ) + "\n";
    all_zeros &= (0 == p_upd_edprsr_exc_disable_check_);
    r += indent_string + "  " + std::string("p_upd_edprsr_exc_inject_sbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_edprsr_exc_inject_sbe_) ) + "\n";
    all_zeros &= (0 == p_upd_edprsr_exc_inject_sbe_);
    r += indent_string + "  " + std::string("p_upd_edprsr_exc_inject_mbe") +  ": 0x" + boost::str( boost::format("%x") % static_cast<uint>(p_upd_edprsr_exc_inject_mbe_) ) + "\n";
    all_zeros &= (0 == p_upd_edprsr_exc_inject_mbe_);
    if (all_zeros && !print_zeros) {
      return("");
    }
    else {
      return r;
    }
  }

private:
  uint8_t tdm_table_disable_check_;
  uint8_t tdm_table_inject_sbe_;
  uint8_t tdm_table_inject_mbe_;
  uint8_t q_minrate_static_disable_check_;
  uint8_t q_minrate_static_inject_sbe_;
  uint8_t q_minrate_static_inject_mbe_;
  uint8_t q_minrate_dynamic_disable_check_;
  uint8_t q_minrate_dynamic_inject_sbe_;
  uint8_t q_minrate_dynamic_inject_mbe_;
  uint8_t q_excrate_static_disable_check_;
  uint8_t q_excrate_static_inject_sbe_;
  uint8_t q_excrate_static_inject_mbe_;
  uint8_t q_excrate_dynamic_disable_check_;
  uint8_t q_excrate_dynamic_inject_sbe_;
  uint8_t q_excrate_dynamic_inject_mbe_;
  uint8_t q_maxrate_static_disable_check_;
  uint8_t q_maxrate_static_inject_sbe_;
  uint8_t q_maxrate_static_inject_mbe_;
  uint8_t q_maxrate_dynamic_disable_check_;
  uint8_t q_maxrate_dynamic_inject_sbe_;
  uint8_t q_maxrate_dynamic_inject_mbe_;
  uint8_t p_maxrate_static_disable_check_;
  uint8_t p_maxrate_static_inject_sbe_;
  uint8_t p_maxrate_static_inject_mbe_;
  uint8_t p_maxrate_dynamic_disable_check_;
  uint8_t p_maxrate_dynamic_inject_sbe_;
  uint8_t p_maxrate_dynamic_inject_mbe_;
  uint8_t q_upd_pex0_min_disable_check_;
  uint8_t q_upd_pex0_min_inject_sbe_;
  uint8_t q_upd_pex0_min_inject_mbe_;
  uint8_t p_upd_pex0_min_disable_check_;
  uint8_t p_upd_pex0_min_inject_sbe_;
  uint8_t p_upd_pex0_min_inject_mbe_;
  uint8_t q_upd_pex0_exc_disable_check_;
  uint8_t q_upd_pex0_exc_inject_sbe_;
  uint8_t q_upd_pex0_exc_inject_mbe_;
  uint8_t p_upd_pex0_exc_disable_check_;
  uint8_t p_upd_pex0_exc_inject_sbe_;
  uint8_t p_upd_pex0_exc_inject_mbe_;
  uint8_t q_upd_pex1_min_disable_check_;
  uint8_t q_upd_pex1_min_inject_sbe_;
  uint8_t q_upd_pex1_min_inject_mbe_;
  uint8_t p_upd_pex1_min_disable_check_;
  uint8_t p_upd_pex1_min_inject_sbe_;
  uint8_t p_upd_pex1_min_inject_mbe_;
  uint8_t q_upd_pex1_exc_disable_check_;
  uint8_t q_upd_pex1_exc_inject_sbe_;
  uint8_t q_upd_pex1_exc_inject_mbe_;
  uint8_t p_upd_pex1_exc_disable_check_;
  uint8_t p_upd_pex1_exc_inject_sbe_;
  uint8_t p_upd_pex1_exc_inject_mbe_;
  uint8_t q_upd_edprsr_min_disable_check_;
  uint8_t q_upd_edprsr_min_inject_sbe_;
  uint8_t q_upd_edprsr_min_inject_mbe_;
  uint8_t p_upd_edprsr_min_disable_check_;
  uint8_t p_upd_edprsr_min_inject_sbe_;
  uint8_t p_upd_edprsr_min_inject_mbe_;
  uint8_t q_upd_edprsr_exc_disable_check_;
  uint8_t q_upd_edprsr_exc_inject_sbe_;
  uint8_t q_upd_edprsr_exc_inject_mbe_;
  uint8_t p_upd_edprsr_exc_disable_check_;
  uint8_t p_upd_edprsr_exc_inject_sbe_;
  uint8_t p_upd_edprsr_exc_inject_mbe_;
private:
  static int StartOffset(
      int index_tm_sch_pipe_rspec
      ) {
    int offset=0;
    offset += 0x400000; // to get to tm_top
    offset += 0xc0000; // to get to tm_sch_top
    assert(index_tm_sch_pipe_rspec < 4);
    offset += index_tm_sch_pipe_rspec * 0x10000; // tm_sch_pipe_rspec[]
    offset += 0x10; // to get to ecc
    return offset;
  }

};












  }; // namespace register_classes
}; // namespace tofino

#endif // __REGISTER_INCLUDES_TM_SCH_PIPE_RSPEC_ECC_H__
